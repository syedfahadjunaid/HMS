{"version":3,"file":"static/js/7793.68ee6b60.chunk.js","mappings":"2NASe,SAASA,IACtB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,eAY5CC,EAA4B,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,KAAI,CAACC,EAASC,KACzC,CACLC,QAASD,EAAQ,EACjBE,KAAMH,MAIJI,EAAS,CACb,CACEC,MAAO,QACPC,OAASC,GAASA,EAAKL,SAEzB,CACEG,MAAO,UACPC,OAASC,GAASA,EAAKJ,KAAKK,WAE9B,CACEH,MAAO,OACPC,OAASC,GAASA,EAAKJ,KAAKM,aAE9B,CACEJ,MAAO,OACPC,OAASC,IAAI,SAAAG,QAjCHC,EAkCAJ,EAAKJ,KAAKS,UAjCN,IAAIC,KAAKF,GAEVG,sBA+BiB,OAAAJ,OA5BpBC,IACI,IAAIE,KAAKF,GAEVI,qBAyBuBC,CAAKT,EAAKJ,KAAKS,YAlCzCD,KAmCZ,GACA,CACEN,MAAO,aACPC,OAASC,GAASA,EAAKJ,KAAKc,eAiChC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAC,SAAE,QAAOA,UAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCF,SAAA,EAChDJ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,uBAAsBF,UACnCJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,kCAAiCF,SAAC,gBAGlDJ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACtB,KAAML,EAAmBM,OAAQA,EAAQsB,MAVvCnB,GACNA,EAAKJ,KAAKM,kBAarB,C,mEC1Fe,SAASkB,EAAmBC,GAMvC,IANwC,KAC1CC,EAAI,iBACJC,EAAgB,YAChBC,EAAW,wBACXC,EAAuB,KACvB7B,GACDyB,EAaC,OACEV,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CACdC,MAAO,CAAEC,gBAAiB,SAC1BC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,UAAU,MACVC,MAAOnC,EAAKoC,OACZV,KAAMA,EACNW,aAAcV,EACdC,YAAaA,EACbU,oBAAqBT,GAG3B,CCwDA,QAjFA,SAAcJ,GAA2B,IAADc,EAAA,IAAzB,KAAEvC,EAAI,OAAEC,EAAM,MAAEsB,GAAOE,EAEpC,MAAOC,EAAMc,IAAWC,EAAAA,EAAAA,UAAS,IAC1Bb,EAAac,IAAkBD,EAAAA,EAAAA,UAAS,GAYzCE,EAAwB,OAAN1C,QAAM,IAANA,OAAM,EAANA,EAAQL,KAAKgD,GAC/BA,EAAOC,QACF9B,EAAAA,EAAAA,KAAC+B,EAAAA,SAAQ,CAAA3B,SAAqByB,EAAOC,UAAtBD,EAAO1C,QAG7Ba,EAAAA,EAAAA,KAAA,MACEM,UAAU,+CAA8CF,SAEvDyB,EAAO1C,OADH0C,EAAO1C,SAMZ6C,EAAmB,OAAJ/C,QAAI,IAAJA,GAC0C,QADtCuC,EAAJvC,EACjBgD,MAAMtB,EAAOE,EAAaF,EAAOE,EAAcA,UAAY,IAAAW,OADtC,EAAJA,EAEjB3C,KAAI,CAACqD,EAAKnD,KACV,MAAMoD,EAAsB,OAANjD,QAAM,IAANA,OAAM,EAANA,EAAQL,KAAI,CAACgD,EAAQ9C,KAEvCiB,EAAAA,EAAAA,KAAA,MAEEM,UAAU,sEAAqEF,SAC9EyB,EAAOzC,OAAO8C,IAAI,UAAA1C,OAFJT,MAOrB,OACEiB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,GAAEF,SACb+B,GADmB3B,EAAM0B,GAgBvB,IAIX,OACE7B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+DAA8DF,SAAA,EAC7EJ,EAAAA,EAAAA,KAAA,SAAAI,UACEJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,iBAAgBF,SAAEwB,OAElC5B,EAAAA,EAAAA,KAAA,SAAAI,SAAQ4B,QAEVhC,EAAAA,EAAAA,KAACS,EAAmB,CAClBE,KAAMA,EACNE,YAAaA,EACbD,iBApEmBA,CAACwB,EAAOC,KAC/BZ,EAAQY,EAAQ,EAoEZvB,wBAjE2BsB,IAC/BT,EAAeW,SAASF,EAAMG,OAAOC,MAAO,KAC5Cf,EAAQ,EAAE,EAgENxC,KAAMA,MAId,C","sources":["components/Nurse/DashboardTable/DashboardTable.js","components/Pagination.js","components/Table.js"],"sourcesContent":["import React from \"react\";\r\nimport { Suspense } from \"react\";\r\nimport \"./DashboardTable.css\";\r\nimport Table from \"../../Table\";\r\nimport { useSelector } from \"react-redux\";\r\nimport parse from \"html-react-parser\";\r\n\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport default function DashboardTable() {\r\n  const { patients } = useSelector((state) => state.PatientState);\r\n  const date = (dateTime) => {\r\n    const newdate = new Date(dateTime);\r\n\r\n    return newdate.toLocaleDateString();\r\n  };\r\n\r\n  const time = (dateTime) => {\r\n    const newDate = new Date(dateTime);\r\n\r\n    return newDate.toLocaleTimeString();\r\n  };\r\n  const mappedPatientData = patients?.map((patient, index) => {\r\n    return {\r\n      tableId: index + 1,\r\n      data: patient,\r\n    };\r\n  });\r\n\r\n  const config = [\r\n    {\r\n      label: \"S No.\",\r\n      render: (list) => list.tableId,\r\n    },\r\n    {\r\n      label: \"Reg No.\",\r\n      render: (list) => list.data.patientId,\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      render: (list) => list.data.patientName,\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      render: (list) =>\r\n        `${date(list.data.createdAt)} - ${time(list.data.createdAt)}`,\r\n    },\r\n    {\r\n      label: \"Mobile No.\",\r\n      render: (list) => list.data.patientPhone,\r\n    },\r\n    // {\r\n    //   label: \"Doctor Visit\",\r\n    //   render: (list) => <Checkbox disabled checked />,\r\n    // },\r\n    // {\r\n    //   label: \"Action\",\r\n    //   render: (list) => (\r\n    //     <div className='flex gap-[10px] justify-center'>\r\n    //       <div\r\n    //         onClick={() => handleOpenViewModal(list)}\r\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\r\n    //         <MdViewKanban className='text-[25px] text-[#96999C]' />\r\n    //       </div>\r\n    //       <div\r\n    //         onClick={() => handleOpenUpdateModal(list)}\r\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\r\n    //         <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\r\n    //       </div>\r\n    //       <div\r\n    //         onClick={() => handleClickOpenDialogBox(list)}\r\n    //         className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\r\n    //         <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\r\n    //       </div>\r\n    //     </div>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const keyFn = (list) => {\r\n    return list.data.patientName;\r\n  };\r\n  return (\r\n    <Suspense fallback={<>...</>}>\r\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\r\n        <div className='flex justify-between'>\r\n          <h2 className='border-b-[4px] border-[#3497F9]'>Patients</h2>\r\n        </div>\r\n\r\n        <Table data={mappedPatientData} config={config} keyFn={keyFn} />\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nexport default function PaginationComponent({\r\n  page,\r\n  handleChangePage,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage,\r\n  data,\r\n}) {\r\n  // const [page, setPage] = React.useState(2);\r\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n  // console.log(data.length);\r\n  return (\r\n    <TablePagination\r\n      style={{ backgroundColor: \"white\" }}\r\n      rowsPerPageOptions={[5, 10, 20, 50]}\r\n      component='div'\r\n      count={data.length}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column.label}>{column.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className='text-center px-[4px] border-b-[1px] p-[10px]'\r\n        key={column.label}>\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      const renderedCells = config?.map((column, index) => {\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className='justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]'>\r\n            {column.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className='' key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className='w-full table-auto border-spacing-2 text-[#595959] font-[300]'>\r\n        <thead>\r\n          <tr className='border-b-[1px]'>{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"names":["DashboardTable","patients","useSelector","state","PatientState","mappedPatientData","map","patient","index","tableId","data","config","label","render","list","patientId","patientName","concat","dateTime","createdAt","Date","toLocaleDateString","toLocaleTimeString","time","patientPhone","_jsx","Suspense","fallback","_Fragment","children","_jsxs","className","Table","keyFn","PaginationComponent","_ref","page","handleChangePage","rowsPerPage","handleChangeRowsPerPage","TablePagination","style","backgroundColor","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_data$slice","setPage","useState","setRowsPerPage","renderedHeaders","column","header","Fragment","renderedRows","slice","row","renderedCells","event","newPage","parseInt","target","value"],"sourceRoot":""}