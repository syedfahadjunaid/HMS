{"version":3,"file":"static/js/7861.ea5b239f.chunk.js","mappings":"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","sources":["components/DialogBoxToDelete.js","components/Pagination.js","components/Table.js","components/superadmin/IPD_PatientTable/IPD_PatientTable.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogBoxToDelete({\r\n  open,\r\n\r\n  handleAgree,\r\n  setOpen,\r\n  message,\r\n}) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby='alert-dialog-slide-description'>\r\n        <DialogTitle>{\"Delete\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-slide-description'>\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleAgree}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nexport default function PaginationComponent({\r\n  page,\r\n  handleChangePage,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage,\r\n  data,\r\n}) {\r\n  // const [page, setPage] = React.useState(2);\r\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n  // console.log(data.length);\r\n  return (\r\n    <TablePagination\r\n      style={{ backgroundColor: \"white\" }}\r\n      rowsPerPageOptions={[5, 10, 20, 50]}\r\n      component='div'\r\n      count={data.length}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column.label}>{column.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className='text-center px-[4px] border-b-[1px] p-[10px]'\r\n        key={column.label}>\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      const renderedCells = config?.map((column, index) => {\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className='justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]'>\r\n            {column.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className='' key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className='w-full table-auto border-spacing-2 text-[#595959] font-[300]'>\r\n        <thead>\r\n          <tr className='border-b-[1px]'>{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import { Suspense } from \"react\";\r\nimport \"./IPD_PatientTable.css\";\r\n\r\nimport Table from \"../../Table\";\r\n\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { MdViewKanban } from \"react-icons/md\";\r\nimport { RiEdit2Fill } from \"react-icons/ri\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport { LuHardDriveDownload } from \"react-icons/lu\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport placeholder from \"../../../assets/imageplaceholder.png\";\r\n\r\nimport * as React from \"react\";\r\nimport Snackbars from \"../../SnackBar\";\r\nimport DialogBoxToDelete from \"../../DialogBoxToDelete\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  useCreateIPDPatientMutation,\r\n  useUpdateIPDPatientByIdMutation,\r\n  useDeleteIPDPatientByIdMutation,\r\n} from \"../../../Store/Services/IPDPatientService\";\r\n\r\nimport {\r\n  createIpdPatientChange,\r\n  updateIpdPatientChange,\r\n  deleteIpdPatientChange,\r\n} from \"../../../Store/Slices/IPDPatientSlice\";\r\n\r\nexport default function IPD_PatientTable() {\r\n  const dispatch = useDispatch();\r\n  const { doctors } = useSelector((state) => state.DoctorState);\r\n  const { patients } = useSelector((state) => state.PatientState);\r\n  const { ipdPatients } = useSelector((state) => state.IPDPatientState);\r\n\r\n  const [createIPDPatient, responseCreateIPDPatient] =\r\n    useCreateIPDPatientMutation();\r\n  const [updateIPDPatientById, responseUpdateIPDPatientById] =\r\n    useUpdateIPDPatientByIdMutation();\r\n  const [deleteIPDPatientById, responseDeleteIPDPatientById] =\r\n    useDeleteIPDPatientByIdMutation();\r\n\r\n  // Snackbar--------------------\r\n  // ----Succcess\r\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\r\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarSuccess = () => {\r\n    setOpenSnackBarSuccess(true);\r\n  };\r\n  // ----Warning\r\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\r\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarWarning = () => {\r\n    setOpenSnackBarWarning(true);\r\n  };\r\n  // ----------------------------\r\n\r\n  // Dialog Box------------------------\r\n  const [openDialogBox, setOpenDialogBox] = React.useState(false);\r\n  const [dialogBoxMessage, setDialogMessage] = React.useState(\r\n    \"Are you sure you want to delete?\"\r\n  );\r\n\r\n  const handleClickOpenDialogBox = (data) => {\r\n    setMainId(data?.data?.mainId);\r\n    setDialogMessage(`Are you sure you want to delete ${data?.data?.mainId} ?`);\r\n    setOpenDialogBox(true);\r\n  };\r\n  const handleAgreeDialogBoxToDelete = () => {\r\n    deleteIPDPatientById(mainId);\r\n    setOpenDialogBox(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (responseDeleteIPDPatientById.isSuccess) {\r\n      dispatch(deleteIpdPatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseDeleteIPDPatientById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleAgreeDialogBoxToDelete();\r\n      setMainId(\"\");\r\n    }\r\n  }, [\r\n    responseDeleteIPDPatientById.isSuccess,\r\n    responseDeleteIPDPatientById.isError,\r\n  ]);\r\n  // ---------------------------------------------\r\n\r\n  // Operation States\r\n  const [ipdPatientId, setIpdPatientId] = React.useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [ipdCaseId, setIpdCaseId] = React.useState({ value: \"\", label: \"\" });\r\n  const [ipdDoctorId, setIpdDoctorId] = React.useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n  const [ipdId, setIpdId] = React.useState({ value: \"\", label: \"\" });\r\n  const [ipdPatientBloodPressure, setIpdPatientBloodPressure] =\r\n    React.useState(\"\");\r\n  // const [ipdPatientBedType, setIpdPatientBedType] = React.useState({\r\n  //   value: \"\",\r\n  //   label: \"\",\r\n  // });\r\n  const [ipdPatientBedType, setIpdPatientBedType] = React.useState(\"\");\r\n  // const [ipdPatientBed, setIpdPatientBed] = React.useState({\r\n  //   value: \"\",\r\n  //   label: \"\",\r\n  // });\r\n  const [ipdPatientBed, setIpdPatientBed] = React.useState(\"\");\r\n  const [ipdPatientNotes, setIpdPatientNotes] = React.useState(\"\");\r\n  // const [ipdBillStatus, setIpdBillStatus] = React.useState({\r\n  //   value: \"\",\r\n  //   label: \"\",\r\n  // });\r\n  const [ipdBillStatus, setIpdBillStatus] = React.useState(\"Paid\");\r\n\r\n  const [mainId, setMainId] = React.useState(\"\");\r\n  const [ipdPatientData, setIpdPatientData] = React.useState(\"\");\r\n  // -----------------------------------------------------------\r\n\r\n  const date = (dateTime) => {\r\n    const newdate = new Date(dateTime);\r\n\r\n    return newdate.toLocaleDateString();\r\n  };\r\n\r\n  const time = (dateTime) => {\r\n    const newDate = new Date(dateTime);\r\n\r\n    return newDate.toLocaleTimeString();\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"12px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  // Add IPD Patient\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const renderedPatientIDForDropdown = patients?.map((data) => {\r\n    return {\r\n      value: data.patientId,\r\n      label: `${data.patientId} / ${data.patientName}`,\r\n    };\r\n  });\r\n\r\n  const renderedCaseIDForDropdown = ipdPatients?.map((data) => {\r\n    return {\r\n      value: data.mainId,\r\n      label: data.mainId,\r\n    };\r\n  });\r\n\r\n  const renderedIPDIDForDropdown = ipdPatients?.map((data) => {\r\n    return {\r\n      value: data.mainId,\r\n      label: data.mainId,\r\n    };\r\n  });\r\n\r\n  const renderedDoctorIDForDropdown = doctors?.map((data) => {\r\n    return {\r\n      value: data.doctorId,\r\n      label: `${data.doctorId} / ${data.doctorName}`,\r\n    };\r\n  });\r\n\r\n  const renderedBedTypeForDropdown = doctors?.map((data) => {\r\n    return {\r\n      value: data.doctorId,\r\n      label: `${data.doctorId} / ${data.doctorName}`,\r\n    };\r\n  });\r\n\r\n  const renderedBedForDropdown = doctors?.map((data) => {\r\n    return {\r\n      value: data.doctorId,\r\n      label: `${data.doctorId} / ${data.doctorName}`,\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (responseCreateIPDPatient.isSuccess) {\r\n      dispatch(createIpdPatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseCreateIPDPatient?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      setIpdPatientId({ value: \"\", label: \"\" });\r\n      // setIpdCaseId({ value: \"\", label: \"\" });\r\n      // setIpdId({ value: \"\", label: \"\" });\r\n\r\n      setIpdDoctorId({ value: \"\", label: \"\" });\r\n      // setIpdPatientBedType({ value: \"\", label: \"\" });\r\n      setIpdPatientBedType(\"\");\r\n      // setIpdPatientBed({ value: \"\", label: \"\" });\r\n      setIpdPatientBed(\"\");\r\n      // setIpdBillStatus({ value: \"\", label: \"\" });\r\n      setIpdBillStatus(\"\");\r\n      // setIpdPatientBloodPressure(\"\");\r\n      setIpdPatientNotes(\"\");\r\n      handleClose();\r\n    } else if (responseCreateIPDPatient.isError) {\r\n      setSnackBarSuccessWarning(responseCreateIPDPatient?.error?.data);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [responseCreateIPDPatient.isSuccess, responseCreateIPDPatient.isError]);\r\n\r\n  const handleAddIPDPatient = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const submitData = {\r\n    //   ipdPatientId: ipdPatientId?.value,\r\n    //   ipdCaseId: ipdCaseId?.value,\r\n    //   ipdDoctorId: ipdDoctorId?.value,\r\n    //   ipdId: ipdId?.value,\r\n    //   ipdPatientBedType: ipdPatientBedType?.value,\r\n    //   ipdPatientBed: ipdPatientBed?.value,\r\n    //   ipdBillStatus: ipdBillStatus?.value,\r\n    //   ipdPatientBloodPressure: ipdPatientBloodPressure,\r\n    //   ipdPatientNotes: ipdPatientNotes,\r\n    // };\r\n    const submitData = {\r\n      ipdPatientId: ipdPatientId?.value,\r\n      // ipdCaseId: ipdCaseId?.value,\r\n      ipdDoctorId: ipdDoctorId?.value,\r\n      // ipdId: ipdId?.value,\r\n      ipdPatientBedType: ipdPatientBedType,\r\n      ipdPatientBed: ipdPatientBed,\r\n      ipdBillStatus: ipdBillStatus,\r\n      // ipdPatientBloodPressure: ipdPatientBloodPressure,\r\n      ipdPatientNotes: ipdPatientNotes,\r\n    };\r\n\r\n    // console.log(submitData);\r\n\r\n    createIPDPatient(submitData);\r\n  };\r\n\r\n  const modalAddIPDPatient = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <h2 className='border-b py-[1rem]'>Add Patient</h2>\r\n      <form className='flex flex-col gap-[1rem]' onSubmit={handleAddIPDPatient}>\r\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Patient Reg No.</label>\r\n            <Select\r\n              required\r\n              options={renderedPatientIDForDropdown}\r\n              onChange={setIpdPatientId}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Case No.</label>\r\n            <Select\r\n              required\r\n              options={renderedCaseIDForDropdown}\r\n              onChange={setIpdCaseId}\r\n            />\r\n          </div>\r\n\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>IPD No.</label>\r\n            <Select\r\n              required\r\n              options={renderedIPDIDForDropdown}\r\n              onChange={setIpdId}\r\n            />\r\n          </div> */}\r\n\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Doctor Reg No.</label>\r\n            <Select\r\n              required\r\n              options={renderedDoctorIDForDropdown}\r\n              onChange={setIpdDoctorId}\r\n            />\r\n          </div>\r\n\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bed Type</label>\r\n            {/* <Select\r\n              required\r\n              options={renderedBedTypeForDropdown}\r\n              onChange={setIpdPatientBedType}\r\n            /> */}\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter bed type'\r\n              value={ipdPatientBedType}\r\n              onChange={(e) => setIpdPatientBedType(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bed</label>\r\n            {/* <Select\r\n              required\r\n              options={renderedBedForDropdown}\r\n              onChange={setIpdPatientBed}\r\n            /> */}\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter bed type'\r\n              value={ipdPatientBed}\r\n              onChange={(e) => setIpdPatientBed(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bill Status</label>\r\n            {/* <Select\r\n              required\r\n              options={[\r\n                { value: true, label: \"Paid\" },\r\n                { value: false, label: \"Unpaid\" },\r\n              ]}\r\n              onChange={setIpdBillStatus}\r\n            /> */}\r\n            <select\r\n              onChange={(e) => setIpdBillStatus(e.target.value)}\r\n              className='p-[10px] outline-none border-b bg-white'>\r\n              <option>Paid</option>\r\n              <option>Unpaid</option>\r\n            </select>\r\n          </div>\r\n          {/* <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Blood Pressure</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              \r\n              placeholder='Enter blood pressure'\r\n              value={ipdPatientBloodPressure}\r\n              onChange={(e) => setIpdPatientBloodPressure(e.target.value)}\r\n            />\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className='flex flex-col gap-[6px]'>\r\n          <label className='text-[14px]'>Notes</label>\r\n          <textarea\r\n            className='border-b py-[10px] outline-none'\r\n            placeholder='Enter notes'\r\n            rows={3}\r\n            value={ipdPatientNotes}\r\n            onChange={(e) => setIpdPatientNotes(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='flex gap-[1rem] items-center'>\r\n          <button\r\n            type='submit'\r\n            className='buttonFilled'>{`Save & Print >`}</button>\r\n          <button className='buttonOutlined'>{`Save >`}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n  // --------------------------------------------\r\n\r\n  // Update Modal\r\n  const [openUpdateModal, setOpenUpdateModal] = React.useState(false);\r\n  const handleOpenUpdateModal = (data) => {\r\n    // console.log(data);\r\n    setMainId(data?.data?.mainId);\r\n    setIpdPatientId({\r\n      value: data?.data?.ipdPatientId,\r\n      label: data?.data?.ipdPatientId,\r\n    });\r\n    // setIpdCaseId({\r\n    //   value: data?.data?.ipdCaseId,\r\n    //   label: data?.data?.ipdCaseId,\r\n    // });\r\n    // setIpdId({ value: data?.data?.ipdId, label: data?.data?.ipdId });\r\n    setIpdDoctorId({\r\n      value: data?.data?.ipdDoctorId,\r\n      label: data?.data?.ipdDoctorId,\r\n    });\r\n    // setIpdPatientBedType({\r\n    //   value: data?.data?.ipdPatientBedType,\r\n    //   label: data?.data?.ipdPatientBedType,\r\n    // });\r\n    setIpdPatientBedType(data?.data?.ipdPatientBedType);\r\n    // setIpdPatientBed({\r\n    //   value: data?.data?.ipdPatientBed,\r\n    //   label: data?.data?.ipdPatientBed,\r\n    // });\r\n    setIpdPatientBed(data?.data?.ipdPatientBed);\r\n    // setIpdBillStatus({\r\n    //   value: data?.data?.ipdBillStatus,\r\n    //   label: data?.data?.ipdBillStatus,\r\n    // });\r\n    setIpdBillStatus(data?.data?.ipdBillStatus);\r\n    // setIpdPatientBloodPressure(data?.data?.ipdPatientBloodPressure);\r\n    setIpdPatientNotes(data?.data?.ipdPatientNotes);\r\n    setOpenUpdateModal(true);\r\n  };\r\n  const handleCloseUpdateModal = () => {\r\n    // setMainId(\"\");\r\n    // setIpdPatientId({ value: \"\", label: \"\" });\r\n    // setIpdCaseId({ value: \"\", label: \"\" });\r\n    // setIpdId({ value: \"\", label: \"\" });\r\n    // setIpdDoctorId({ value: \"\", label: \"\" });\r\n    // setIpdPatientBedType({ value: \"\", label: \"\" });\r\n    // setIpdPatientBed({ value: \"\", label: \"\" });\r\n    // setIpdBillStatus({ value: \"\", label: \"\" });\r\n    // setIpdPatientBloodPressure(\"\");\r\n    // setIpdPatientNotes(\"\");\r\n    // setOpenUpdateModal(false);\r\n    setMainId(\"\");\r\n    setIpdPatientId({ value: \"\", label: \"\" });\r\n    // setIpdCaseId({ value: \"\", label: \"\" });\r\n    // setIpdId({ value: \"\", label: \"\" });\r\n    setIpdDoctorId({ value: \"\", label: \"\" });\r\n    setIpdPatientBedType(\"\");\r\n    setIpdPatientBed(\"\");\r\n    setIpdBillStatus(\"Paid\");\r\n    // setIpdPatientBloodPressure(\"\");\r\n    setIpdPatientNotes(\"\");\r\n    setOpenUpdateModal(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (responseUpdateIPDPatientById.isSuccess) {\r\n      dispatch(updateIpdPatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseUpdateIPDPatientById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleCloseUpdateModal();\r\n    } else if (responseUpdateIPDPatientById.isError) {\r\n      setSnackBarSuccessWarning(responseUpdateIPDPatientById?.error?.data);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [\r\n    responseUpdateIPDPatientById.isSuccess,\r\n    responseUpdateIPDPatientById.isError,\r\n  ]);\r\n\r\n  const handleUpdateIPDPatient = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const submitData = {\r\n    //   ipdPatientId: ipdPatientId?.value,\r\n    //   ipdCaseId: ipdCaseId?.value,\r\n    //   ipdDoctorId: ipdDoctorId?.value,\r\n    //   ipdId: ipdId?.value,\r\n    //   ipdPatientBedType: ipdPatientBedType?.value,\r\n    //   ipdPatientBed: ipdPatientBed?.value,\r\n    //   ipdBillStatus: ipdBillStatus?.value,\r\n    //   ipdPatientBloodPressure: ipdPatientBloodPressure,\r\n    //   ipdPatientNotes: ipdPatientNotes,\r\n    // };\r\n    const submitData = {\r\n      ipdPatientId: ipdPatientId?.value,\r\n      // ipdCaseId: ipdCaseId?.value,\r\n      ipdDoctorId: ipdDoctorId?.value,\r\n      // ipdId: ipdId?.value,\r\n      ipdPatientBedType: ipdPatientBedType,\r\n      ipdPatientBed: ipdPatientBed,\r\n      ipdBillStatus: ipdBillStatus,\r\n      // ipdPatientBloodPressure: ipdPatientBloodPressure,\r\n      ipdPatientNotes: ipdPatientNotes,\r\n    };\r\n\r\n    const updateData = {\r\n      id: mainId,\r\n      data: submitData,\r\n    };\r\n\r\n    updateIPDPatientById(updateData);\r\n  };\r\n\r\n  const modalUpdateIPDPatient = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <h2 className='border-b py-[1rem]'>Update Patient</h2>\r\n      <form\r\n        className='flex flex-col gap-[1rem]'\r\n        onSubmit={handleUpdateIPDPatient}>\r\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Patient Reg No.</label>\r\n            <Select\r\n              options={renderedPatientIDForDropdown}\r\n              onChange={setIpdPatientId}\r\n              defaultValue={ipdPatientId}\r\n            />\r\n          </div>\r\n\r\n          {/* <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Case No.</label>\r\n            <Select\r\n              options={renderedCaseIDForDropdown}\r\n              onChange={setIpdCaseId}\r\n              defaultValue={ipdCaseId}\r\n            />\r\n          </div>\r\n\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>OPD No.</label>\r\n            <Select\r\n              options={renderedIPDIDForDropdown}\r\n              onChange={setIpdId}\r\n              defaultValue={ipdId}\r\n            />\r\n          </div> */}\r\n\r\n          <div className='flex flex-col gap-[6px] relative w-full'>\r\n            <label className='text-[14px]'>Doctor Reg No.</label>\r\n            <Select\r\n              options={renderedDoctorIDForDropdown}\r\n              onChange={setIpdDoctorId}\r\n              defaultValue={ipdDoctorId}\r\n            />\r\n          </div>\r\n\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bed Type</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter bed type'\r\n              value={ipdPatientBedType}\r\n              onChange={(e) => setIpdPatientBedType(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bed</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter bed type'\r\n              value={ipdPatientBed}\r\n              onChange={(e) => setIpdPatientBed(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Bill Status</label>\r\n            {/* <Select\r\n              options={[\r\n                { value: true, label: \"Paid\" },\r\n                { value: false, label: \"Unpaid\" },\r\n              ]}\r\n              onChange={setIpdBillStatus}\r\n              defaultValue={\r\n                ipdBillStatus.value === true\r\n                  ? { value: true, label: \"Paid\" }\r\n                  : { value: false, label: \"Unpaid\" }\r\n              }\r\n            /> */}\r\n            <select\r\n              value={ipdBillStatus}\r\n              onChange={(e) => setIpdBillStatus(e.target.value)}\r\n              className='p-[10px] outline-none border-b bg-white'>\r\n              <option>Paid</option>\r\n              <option>Unpaid</option>\r\n            </select>\r\n          </div>\r\n          {/* <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Blood Pressure</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter blood pressure'\r\n              value={ipdPatientBloodPressure}\r\n              onChange={(e) => setIpdPatientBloodPressure(e.target.value)}\r\n            />\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className='flex flex-col gap-[6px]'>\r\n          <label className='text-[14px]'>Notes</label>\r\n          <textarea\r\n            className='border-b py-[10px] outline-none'\r\n            placeholder='Enter notes'\r\n            rows={3}\r\n            value={ipdPatientNotes}\r\n            onChange={(e) => setIpdPatientNotes(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='flex gap-[1rem] items-center'>\r\n          <button\r\n            type='submit'\r\n            className='buttonFilled'>{`Save & Print >`}</button>\r\n          <button className='buttonOutlined'>{`Save >`}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  // ---------------------------------------------------\r\n\r\n  // View Modal\r\n  const [openViewModal, setOpenViewModal] = React.useState(false);\r\n  const handleOpenViewModal = (data) => {\r\n    setIpdPatientData(data);\r\n    setOpenViewModal(true);\r\n  };\r\n  // console.log(opdPatientData);\r\n  const handleCloseViewModal = () => setOpenViewModal(false);\r\n\r\n  const modalViewPatientDetails = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <div className='border-b flex gap-[1rem] py-[1rem] w-full'>\r\n        <h3 className='font-[500]'>ID: </h3>\r\n        <h3>{ipdPatientData?.data?.mainId}</h3>\r\n      </div>\r\n      <div className='flex w-full'>\r\n        <div className='w-[25%] flex flex-col items-center'>\r\n          <img\r\n            className='w-[200px] h-[200px] object-contain'\r\n            src={\r\n              ipdPatientData?.patientData?.patientImage\r\n                ? process.env.React_App_Base_Image_Url +\r\n                  ipdPatientData?.patientData?.patientImage\r\n                : placeholder\r\n            }\r\n            alt='patientImage'\r\n          />\r\n          <button className='buttonFilled w-fit'>Button</button>\r\n        </div>\r\n        <div className='w-[75%] flex flex-col gap-[10px] text-[14px]'>\r\n          <div className='grid grid-cols-2 gap-[10px]'>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Id: </p>\r\n              <p>{ipdPatientData?.data?.ipdPatientId}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Doctor Id: </p>\r\n              <p>{ipdPatientData?.data?.ipdDoctorId}</p>\r\n            </div>\r\n\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Name: </p>\r\n              <p>{ipdPatientData?.patientData?.patientName}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Doctor Name: </p>\r\n              <p>{ipdPatientData?.doctorData?.doctorName}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Blood Group: </p>\r\n              <p>{ipdPatientData?.patientData?.patientBloodGroup}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Doctor Phone: </p>\r\n              <p>{ipdPatientData?.doctorData?.doctorPhone}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Gender: </p>\r\n              <p>{ipdPatientData?.patientData?.patientGender}</p>\r\n            </div>\r\n            {/* <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Case No: </p>\r\n              <p>{ipdPatientData?.data?.ipdCaseId}</p>\r\n            </div> */}\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient DOB: </p>\r\n              <p>{ipdPatientData?.patientData?.patientDateOfBirth}</p>\r\n            </div>\r\n            {/* <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>OPD No: </p>\r\n              <p>{ipdPatientData?.data?.ipdId}</p>\r\n            </div> */}\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Phone: </p>\r\n              <p>{ipdPatientData?.patientData?.patientPhone}</p>\r\n            </div>\r\n            {/* <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Blood Pressure: </p>\r\n              <p>{ipdPatientData?.data?.ipdPatientBloodPressure}</p>\r\n            </div> */}\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Bed Type: </p>\r\n              <p>{ipdPatientData?.data?.ipdPatientBedType}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Height: </p>\r\n              <p>{ipdPatientData?.patientData?.patientHeight}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Bill Status: </p>\r\n              <p>\r\n                {ipdPatientData?.data?.ipdBillStatus === true\r\n                  ? \"Paid\"\r\n                  : \"Unpaid\"}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Patient Weight: </p>\r\n              <p>{ipdPatientData?.patientData?.patientWeight}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Bed: </p>\r\n              <p>{ipdPatientData?.data?.ipdPatientBed}</p>\r\n            </div>\r\n          </div>\r\n          <div className='flex flex-col gap-[10px]'>\r\n            <div className='flex flex-col'>\r\n              <p className='font-[600] w-[150px]'>Notes: </p>\r\n              <p className='text-[14px]'>\r\n                {ipdPatientData?.data?.ipdPatientNotes}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Created On: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {`${date(ipdPatientData?.data?.createdAt)} ${time(\r\n                  ipdPatientData?.data?.createdAt\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Updated On: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {`${date(ipdPatientData?.data?.updatedAt)} ${time(\r\n                  ipdPatientData?.data?.updatedAt\r\n                )}`}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // ---------------\r\n  // console.log(ipdPatientData);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const filteredArray = ipdPatients?.filter((data) => {\r\n    if (search !== \"\") {\r\n      const userSearch = search.toLowerCase();\r\n      const searchInData = data?.mainId?.toLowerCase();\r\n\r\n      return searchInData?.startsWith(userSearch);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const mappedBillData = filteredArray?.map((data, index) => {\r\n    const filteredPatientData = patients?.find(\r\n      (patient) => data?.ipdPatientId === patient?.patientId\r\n    );\r\n    const filteredDoctorData = doctors?.find(\r\n      (doctor) => doctor?.doctorId === data?.ipdDoctorId\r\n    );\r\n    return {\r\n      data,\r\n      patientData: filteredPatientData,\r\n      doctorData: filteredDoctorData,\r\n    };\r\n  });\r\n\r\n  const config = [\r\n    {\r\n      label: \"Reg No.\",\r\n      render: (list) => list?.data?.mainId,\r\n    },\r\n    {\r\n      label: \"Patient Name\",\r\n      render: (list) => list?.patientData?.patientName,\r\n    },\r\n    {\r\n      label: \"Doctor Name\",\r\n      render: (list) => list?.doctorData?.doctorName,\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      render: (list) => date(list?.data?.createdAt),\r\n    },\r\n    {\r\n      label: \"Bed\",\r\n      render: (list) => list?.data?.ipdPatientBed,\r\n    },\r\n    {\r\n      label: \"Bill Status\",\r\n      render: (list) => (\r\n        <>\r\n          {list?.data?.ipdBillStatus === true ? (\r\n            <p className='bg-[#B5FFBC] font-[600] rounded-lg p-[4px]'>Paid</p>\r\n          ) : (\r\n            <p className='bg-[#F76D71] font-[600] rounded-lg p-[4px]'>Unpaid</p>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      label: \"Action\",\r\n      render: (list) => (\r\n        <div className='flex gap-[10px] justify-center'>\r\n          <div\r\n            onClick={() => handleOpenViewModal(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\r\n            <MdViewKanban className='text-[25px] text-[#96999C]' />\r\n          </div>\r\n          <div\r\n            onClick={() => handleOpenUpdateModal(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\r\n            <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\r\n          </div>\r\n          {/* <div\r\n            onClick={() => handleClickOpenDialogBox(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\r\n            <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\r\n          </div> */}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyFn = (list) => {\r\n    return list.mainId;\r\n  };\r\n  return (\r\n    <Suspense fallback={<>...</>}>\r\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\r\n        <div className='flex justify-between'>\r\n          <h2 className='border-b-[4px] border-[#3497F9]'>IPD Patients</h2>\r\n          <button\r\n            onClick={handleOpen}\r\n            className='bg-[#3497F9] text-white p-[10px] rounded-md'>\r\n            + Add IPD Patients\r\n          </button>\r\n        </div>\r\n        <div className='flex justify-between'>\r\n          <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <FaSearch className='text-[#56585A]' />\r\n            <input\r\n              className='bg-transparent outline-none'\r\n              placeholder='Search by id'\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          {/* <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <input type='date' className='bg-transparent outline-none' />\r\n          </div> */}\r\n        </div>\r\n        <Table data={mappedBillData} config={config} keyFn={keyFn} />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n              Add IPD Patient\r\n            </h1>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalAddIPDPatient}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdateModal}\r\n        onClose={handleCloseUpdateModal}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n              Update IPD Patient\r\n            </h1>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalUpdateIPDPatient}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={openViewModal}\r\n        onClose={handleCloseViewModal}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <div className='flex justify-between items-center'>\r\n              <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n                IPD Patient Details\r\n              </h1>\r\n              <button className='buttonFilled flex items-center gap-[10px]'>\r\n                <LuHardDriveDownload />\r\n                <p>Download</p>\r\n              </button>\r\n            </div>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalViewPatientDetails}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      {/* Success Snackbar */}\r\n      <Snackbars\r\n        open={openSnackbarSuccess}\r\n        setOpen={setOpenSnackBarSuccess}\r\n        severity='success'\r\n        message={snackBarMessageSuccess}\r\n      />\r\n      {/* Warning Snackbar */}\r\n      <Snackbars\r\n        open={openSnackbarWarning}\r\n        setOpen={setOpenSnackBarWarning}\r\n        severity='warning'\r\n        message={snackBarMessageWarning}\r\n      />\r\n      <DialogBoxToDelete\r\n        open={openDialogBox}\r\n        setOpen={setOpenDialogBox}\r\n        handleAgree={handleAgreeDialogBoxToDelete}\r\n        message={dialogBoxMessage}\r\n      />\r\n    </Suspense>\r\n  );\r\n}\r\n"],"names":["Transition","React","props","ref","_jsx","Slide","direction","DialogBoxToDelete","_ref","open","handleAgree","setOpen","message","handleClose","children","_jsxs","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","PaginationComponent","page","handleChangePage","rowsPerPage","handleChangeRowsPerPage","data","TablePagination","style","backgroundColor","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_data$slice","config","keyFn","setPage","useState","setRowsPerPage","renderedHeaders","map","column","header","Fragment","label","className","renderedRows","slice","row","index","renderedCells","render","concat","event","newPage","parseInt","target","value","IPD_PatientTable","_ipdPatientData$data","_ipdPatientData$patie","_ipdPatientData$patie2","_ipdPatientData$data2","_ipdPatientData$data3","_ipdPatientData$patie3","_ipdPatientData$docto","_ipdPatientData$patie4","_ipdPatientData$docto2","_ipdPatientData$patie5","_ipdPatientData$patie6","_ipdPatientData$patie7","_ipdPatientData$data4","_ipdPatientData$patie8","_ipdPatientData$data5","_ipdPatientData$patie9","_ipdPatientData$data6","_ipdPatientData$data7","_ipdPatientData$data8","_ipdPatientData$data9","_ipdPatientData$data10","_ipdPatientData$data11","dispatch","useDispatch","doctors","useSelector","state","DoctorState","patients","PatientState","ipdPatients","IPDPatientState","createIPDPatient","responseCreateIPDPatient","useCreateIPDPatientMutation","updateIPDPatientById","responseUpdateIPDPatientById","useUpdateIPDPatientByIdMutation","deleteIPDPatientById","responseDeleteIPDPatientById","useDeleteIPDPatientByIdMutation","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","handleClickSnackbarSuccess","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","handleClickSnackbarWarning","openDialogBox","setOpenDialogBox","dialogBoxMessage","setDialogMessage","handleAgreeDialogBoxToDelete","mainId","_responseDeleteIPDPat","isSuccess","deleteIpdPatientChange","Math","random","setMainId","isError","ipdPatientId","setIpdPatientId","ipdCaseId","setIpdCaseId","ipdDoctorId","setIpdDoctorId","ipdId","setIpdId","ipdPatientBloodPressure","setIpdPatientBloodPressure","ipdPatientBedType","setIpdPatientBedType","ipdPatientBed","setIpdPatientBed","ipdPatientNotes","setIpdPatientNotes","ipdBillStatus","setIpdBillStatus","ipdPatientData","setIpdPatientData","date","dateTime","Date","toLocaleDateString","time","toLocaleTimeString","position","top","left","transform","width","height","bgcolor","borderRadius","border","outline","boxShadow","p","renderedPatientIDForDropdown","patientId","patientName","renderedDoctorIDForDropdown","doctorId","doctorName","_responseCreateIPDPat","createIpdPatientChange","_responseCreateIPDPat2","error","modalAddIPDPatient","onSubmit","e","preventDefault","submitData","Select","required","options","onChange","type","placeholder","rows","openUpdateModal","setOpenUpdateModal","handleCloseUpdateModal","_responseUpdateIPDPat","updateIpdPatientChange","_responseUpdateIPDPat2","modalUpdateIPDPatient","defaultValue","openViewModal","setOpenViewModal","modalViewPatientDetails","src","patientData","patientImage","process","alt","doctorData","patientBloodGroup","doctorPhone","patientGender","patientDateOfBirth","patientPhone","patientHeight","patientWeight","createdAt","updatedAt","search","setSearch","filteredArray","filter","_data$mainId","userSearch","toLowerCase","searchInData","startsWith","mappedBillData","filteredPatientData","find","patient","filteredDoctorData","doctor","list","_list$data","_list$patientData","_list$doctorData","_list$data2","_list$data3","_list$data4","_Fragment","MdViewKanban","_data$data3","_data$data4","_data$data5","_data$data6","_data$data7","_data$data8","_data$data9","_data$data10","_data$data11","handleOpenUpdateModal","RiEdit2Fill","Suspense","fallback","handleOpen","FaSearch","Table","Modal","Box","sx","Typography","variant","mt","handleCloseViewModal","LuHardDriveDownload","Snackbars","severity"],"sourceRoot":""}