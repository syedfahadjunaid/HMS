{"version":3,"file":"static/js/7947.d6a6c801.chunk.js","mappings":"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","sources":["components/Nurse/EditPatientTableAndForm/EditPatientTable/EditPatientTable.js","components/Pagination.js","components/Table.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./EditPatientTable.css\";\r\nimport Table from \"../../../Table\";\r\nimport { useSelector } from \"react-redux\";\r\nimport parse from \"html-react-parser\";\r\nimport { Suspense } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { MdViewKanban } from \"react-icons/md\";\r\nimport { RiEdit2Fill } from \"react-icons/ri\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport { LuHardDriveDownload } from \"react-icons/lu\";\r\n\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport default function EditPatientTable({ setViewEditForm, setPatientId }) {\r\n  const { patients } = useSelector((state) => state.PatientState);\r\n  const date = (dateTime) => {\r\n    const newdate = new Date(dateTime);\r\n\r\n    return newdate.toLocaleDateString();\r\n  };\r\n\r\n  const time = (dateTime) => {\r\n    const newDate = new Date(dateTime);\r\n\r\n    return newDate.toLocaleTimeString();\r\n  };\r\n\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const filteredArray = patients?.filter((data) => {\r\n    if (search !== \"\") {\r\n      const userSearch = search.toLowerCase();\r\n      const searchInData = data?.patientId?.toLowerCase();\r\n\r\n      return searchInData?.startsWith(userSearch);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const mappedPatientData = filteredArray?.map((patient, index) => {\r\n    return {\r\n      tableId: index + 1,\r\n      data: patient,\r\n    };\r\n  });\r\n\r\n  const config = [\r\n    {\r\n      label: \"S No.\",\r\n      render: (list) => list.tableId,\r\n    },\r\n    {\r\n      label: \"Reg No.\",\r\n      render: (list) => list.data.patientId,\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      render: (list) => list.data.patientName,\r\n    },\r\n    {\r\n      label: \"Date\",\r\n      render: (list) =>\r\n        `${date(list.data.createdAt)} - ${time(list.data.createdAt)}`,\r\n    },\r\n    {\r\n      label: \"Mobile No.\",\r\n      render: (list) => list.data.patientPhone,\r\n    },\r\n    // {\r\n    //   label: \"Doctor Visit\",\r\n    //   render: (list) => <Checkbox checked />,\r\n    // },\r\n    {\r\n      label: \"Action\",\r\n      render: (list) => (\r\n        <div className='flex gap-[10px] justify-center'>\r\n          <div\r\n            // onClick={() => handleOpenViewModal(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\r\n            <MdViewKanban className='text-[25px] text-[#96999C]' />\r\n          </div>\r\n          <div\r\n            // onClick={() => handleOpenUpdateModal(list)}\r\n            onClick={() => {\r\n              setPatientId(list?.data?.patientId);\r\n              setViewEditForm(true);\r\n            }}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\r\n            <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\r\n          </div>\r\n          {/* <div\r\n            // onClick={() => handleClickOpenDialogBox(list)}\r\n            className=\"p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer\"\r\n          >\r\n            <RiDeleteBin6Fill className=\"text-[25px] text-[#EB5757]\" />\r\n          </div> */}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyFn = (list) => {\r\n    return list.data.patientName;\r\n  };\r\n  return (\r\n    <Suspense fallback={<>...</>}>\r\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\r\n        <div className='flex justify-between'>\r\n          <h2 className='border-b-[4px] border-[#3497F9]'>Patient List</h2>\r\n        </div>\r\n        <div className='flex justify-between'>\r\n          <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <FaSearch className='text-[#56585A]' />\r\n            <input\r\n              className='bg-transparent outline-none'\r\n              placeholder='Search by patient id'\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          {/* <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <input type='date' className='bg-transparent outline-none' />\r\n          </div> */}\r\n        </div>\r\n        <Table data={mappedPatientData} config={config} keyFn={keyFn} />\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nexport default function PaginationComponent({\r\n  page,\r\n  handleChangePage,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage,\r\n  data,\r\n}) {\r\n  // const [page, setPage] = React.useState(2);\r\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n  // console.log(data.length);\r\n  return (\r\n    <TablePagination\r\n      style={{ backgroundColor: \"white\" }}\r\n      rowsPerPageOptions={[5, 10, 20, 50]}\r\n      component='div'\r\n      count={data.length}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column.label}>{column.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className='text-center px-[4px] border-b-[1px] p-[10px]'\r\n        key={column.label}>\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      const renderedCells = config?.map((column, index) => {\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className='justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]'>\r\n            {column.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className='' key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className='w-full table-auto border-spacing-2 text-[#595959] font-[300]'>\r\n        <thead>\r\n          <tr className='border-b-[1px]'>{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"names":["EditPatientTable","_ref","setViewEditForm","setPatientId","patients","useSelector","state","PatientState","search","setSearch","React","filteredArray","filter","data","_data$patientId","userSearch","toLowerCase","searchInData","patientId","startsWith","mappedPatientData","map","patient","index","tableId","config","label","render","list","patientName","concat","dateTime","createdAt","Date","toLocaleDateString","toLocaleTimeString","time","patientPhone","_jsxs","className","children","_jsx","MdViewKanban","onClick","_list$data","RiEdit2Fill","Suspense","fallback","_Fragment","FaSearch","placeholder","onChange","e","target","value","Table","keyFn","PaginationComponent","page","handleChangePage","rowsPerPage","handleChangeRowsPerPage","TablePagination","style","backgroundColor","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_data$slice","setPage","useState","setRowsPerPage","renderedHeaders","column","header","Fragment","renderedRows","slice","row","renderedCells","event","newPage","parseInt"],"sourceRoot":""}