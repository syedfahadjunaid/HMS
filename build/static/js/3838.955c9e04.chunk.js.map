{"version":3,"file":"static/js/3838.955c9e04.chunk.js","mappings":"uPAYA,MAAMA,GAAUC,EAAAA,EAAAA,OAAK,IAAM,4EACrBC,GAAWD,EAAAA,EAAAA,OAAK,IAAM,4GAEtBE,GAAiBF,EAAAA,EAAAA,OAAK,IAC1B,iGAGa,SAASG,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAyBC,EAAAA,EAAAA,OAEzB,SAAEC,EAAQ,cAAEC,EAAa,cAAEC,EAAa,cAAEC,IAAkBC,EAAAA,EAAAA,KAC/DC,GAAUA,EAAMC,eAwCnB,OApBAC,EAAAA,EAAAA,YAAU,KAGR,GApBiBC,WAEjB,MAAMC,QACEX,EAAuBY,UAC/B,GAAID,EAA8BE,UAAW,CAAC,IAADC,EAAAC,EAC3C,MAAMC,EACyB,OAA7BL,QAA6B,IAA7BA,GAAmC,QAANG,EAA7BH,EAA+BM,YAAI,IAAAH,OAAN,EAA7BA,EAAqCI,IACN,OAA7BP,QAA6B,IAA7BA,GAAmC,QAANI,EAA7BJ,EAA+BM,YAAI,IAAAF,OAAN,EAA7BA,EAAqCI,IACrC,IAAiC,OAA7BR,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BM,OAEjCG,EAAwD,OAA1BJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BK,QAC7DJ,IAA4B,IAAnBA,EAAKK,WAAuBL,IAExCnB,GAASyB,EAAAA,EAAAA,IAAeH,GAC1B,GAIAI,GAEIxB,EAAuBa,UAAW,CAAC,IAADY,EAAAC,EACpC,MAAMV,EAAmD,OAAtBhB,QAAsB,IAAtBA,GAA4B,QAANyB,EAAtBzB,EAAwBiB,YAAI,IAAAQ,OAAN,EAAtBA,EAA8BP,IACzC,OAAtBlB,QAAsB,IAAtBA,GAA4B,QAAN0B,EAAtB1B,EAAwBiB,YAAI,IAAAS,OAAN,EAAtBA,EAA8BP,IAC9B,IAA0B,OAAtBnB,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBiB,OAExBG,EAAwD,OAA1BJ,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BK,QAC7DJ,IAA4B,IAAnBA,EAAKK,WAAuBL,IAGxCnB,GAASyB,EAAAA,EAAAA,IAAeH,GAC1B,IACC,CACDjB,EACAC,EACAC,EACAL,EAAuBa,aAGvBc,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG7B,EAAuB8B,WACtBH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,QAASJ,UACzBF,EAAAA,EAAAA,KAACO,EAAAA,EAAc,OAGjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CP,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKS,UAAU,yCAAwCP,UACrDF,EAAAA,EAAAA,KAAClC,EAAO,CACN4C,WAAU,GAAAC,OAAKC,EAAAA,EAAaC,MAAMC,SAAQ,KAAAH,OAAIC,EAAAA,EAAaC,MAAME,cAAcC,gBAGnFR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6CP,SAAA,EAC1DF,EAAAA,EAAAA,KAAChC,EAAQ,KACTgC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,2DAA0DP,UACvEF,EAAAA,EAAAA,KAAC/B,EAAc,aAO7B,C","sources":["pages/Nurse/Dashboard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nimport { lazy, Suspense, useEffect } from \"react\";\r\nimport browserLinks from \"../../browserlinks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nimport { useGetAllPatientsQuery } from \"../../Store/Services/PatientService\";\r\nimport { getAllPatients } from \"../../Store/Slices/PatientSlice\";\r\n\r\nconst SideNav = lazy(() => import(\"../../components/Nurse/SideNav\"));\r\nconst UpperNav = lazy(() => import(\"../../components/Nurse/UpperNav/UpperNav\"));\r\n\r\nconst DashboardTable = lazy(() =>\r\n  import(\"../../components/Nurse/DashboardTable/DashboardTable\")\r\n);\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n  const responseGetAllPatients = useGetAllPatientsQuery();\r\n\r\n  const { patients, patientCreate, patientUpdate, patientDelete } = useSelector(\r\n    (state) => state.PatientState\r\n  );\r\n\r\n  const apiRefetch = async () => {\r\n    // Patients\r\n    const responseGetAllPatientsRefetch =\r\n      await responseGetAllPatients.refetch();\r\n    if (responseGetAllPatientsRefetch.isSuccess) {\r\n      const reverseArrayGetAllPatients =\r\n        responseGetAllPatientsRefetch?.data?.map(\r\n          responseGetAllPatientsRefetch?.data?.pop,\r\n          [...responseGetAllPatientsRefetch?.data]\r\n        );\r\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\r\n        (data) => data.isDeleted === false && data\r\n      );\r\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\r\n    }\r\n    //------------------\r\n  };\r\n  useEffect(() => {\r\n    apiRefetch();\r\n    // Patients\r\n    if (responseGetAllPatients.isSuccess) {\r\n      const reverseArrayGetAllPatients = responseGetAllPatients?.data?.map(\r\n        responseGetAllPatients?.data?.pop,\r\n        [...responseGetAllPatients?.data]\r\n      );\r\n      const filteredArrayGetAllPatients = reverseArrayGetAllPatients?.filter(\r\n        (data) => data.isDeleted === false && data\r\n      );\r\n\r\n      dispatch(getAllPatients(filteredArrayGetAllPatients));\r\n    }\r\n  }, [\r\n    patientCreate,\r\n    patientUpdate,\r\n    patientDelete,\r\n    responseGetAllPatients.isSuccess,\r\n  ]);\r\n  return (\r\n    <>\r\n      {responseGetAllPatients.isLoading ? (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      ) : (\r\n        <div className='superadmin-main flex flex-row w-full h-screen'>\r\n          <div className='superadmin-main-left w-[20%] shadow-lg'>\r\n            <SideNav\r\n              activePage={`${browserLinks.nurse.category}/${browserLinks.nurse.internalPages.dashboard}`}\r\n            />\r\n          </div>\r\n          <div className='superadmin-main-right flex flex-col w-[80%]'>\r\n            <UpperNav />\r\n            <div className='superadmin-main-right_dashboard w-full overflow-y-scroll'>\r\n              <DashboardTable />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["SideNav","lazy","UpperNav","DashboardTable","Dashboard","dispatch","useDispatch","responseGetAllPatients","useGetAllPatientsQuery","patients","patientCreate","patientUpdate","patientDelete","useSelector","state","PatientState","useEffect","async","responseGetAllPatientsRefetch","refetch","isSuccess","_responseGetAllPatien","_responseGetAllPatien2","reverseArrayGetAllPatients","data","map","pop","filteredArrayGetAllPatients","filter","isDeleted","getAllPatients","apiRefetch","_responseGetAllPatien3","_responseGetAllPatien4","_jsx","_Fragment","children","isLoading","Box","sx","width","LinearProgress","_jsxs","className","activePage","concat","browserLinks","nurse","category","internalPages","dashboard"],"sourceRoot":""}