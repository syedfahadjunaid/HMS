{"version":3,"file":"static/js/6390.24273905.chunk.js","mappings":"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","sources":["components/Nurse/AddEmergencyPatientForm/AddEmergencyPatientForm.js","components/SnackBar.js"],"sourcesContent":["import \"./AddEmergencyPatientForm.css\";\r\nimport React, { useState, useRef, useMemo, useEffect } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Suspense } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport placeholder from \"../../../assets/imageplaceholder.png\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbars from \"../../SnackBar\";\r\nimport { useAddPatientMutation } from \"../../../Store/Services/PatientService\";\r\nimport { createPatientChange } from \"../../../Store/Slices/PatientSlice\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nexport default function AddEmergencyPatientForm() {\r\n  const dispatch = useDispatch();\r\n  const [addPatient, responseAddPatient] = useAddPatientMutation();\r\n  // const editor = useRef(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  // const { doctors } = useSelector((state) => state.DoctorState);\r\n\r\n  // const config = useMemo(\r\n  //   () => ({\r\n  //     readonly: false,\r\n  //   }),\r\n  //   []\r\n  // );\r\n\r\n  const { adminLoggedInData } = useSelector((state) => state.AdminState);\r\n\r\n  const [patientGender, setPatientGender] = React.useState(\"Female\");\r\n  const [patientImage, setPatientImage] = React.useState();\r\n  // const [patientAdmitCategory, setPatientAdminCaetgory] =\r\n  //   React.useState(\"OPD Patient\");\r\n  // const [patientCase, setPatientCase] = React.useState(\"\");\r\n  // const [patientAdmittingDoctor, setPatientAdmittingDoctor] = React.useState({\r\n  //   value: \"\",\r\n  //   label: \"\",\r\n  // });\r\n  // const [patientVisitingDoctor, setPatientVisitingDoctor] = React.useState({\r\n  //   value: \"\",\r\n  //   label: \"\",\r\n  // });\r\n\r\n  const [submitButton, setSubmitButton] = React.useState(\"\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // Snackbar--------------------\r\n  // ----Succcess\r\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\r\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarSuccess = () => {\r\n    setOpenSnackBarSuccess(true);\r\n  };\r\n  // ----Warning\r\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\r\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarWarning = () => {\r\n    setOpenSnackBarWarning(true);\r\n  };\r\n  // ----------------------------\r\n\r\n  React.useEffect(() => {\r\n    if (responseAddPatient.isSuccess) {\r\n      dispatch(createPatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseAddPatient?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n\r\n      setPatientImage();\r\n      setPatientGender(\"Female\");\r\n      // setPatientCase(\"\");\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, [1000]);\r\n      reset();\r\n    } else if (responseAddPatient.isError) {\r\n      setSnackBarSuccessWarning(responseAddPatient?.error?.data?.error);\r\n      handleClickSnackbarWarning();\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, [1000]);\r\n    }\r\n  }, [responseAddPatient.isSuccess, responseAddPatient.isError]);\r\n\r\n  const handleAddPatient = (data) => {\r\n    const patientData = {\r\n      ...data,\r\n      patientGender,\r\n      patientImage,\r\n      // patientAdmitCategory,\r\n      // patientCase,\r\n    };\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"patientName\", patientData?.patientName);\r\n    formData.append(\"patientEmail\", patientData?.patientEmail);\r\n    formData.append(\"patientFatherName\", patientData?.patientFatherName);\r\n    formData.append(\"patientHusbandName\", patientData?.patientHusbandName);\r\n    formData.append(\"patientDateOfBirth\", patientData?.patientDateOfBirth);\r\n    formData.append(\"patientPhone\", patientData?.patientPhone);\r\n    formData.append(\"patientPhone2\", patientData?.patientPhone2);\r\n    formData.append(\"patientHeight\", patientData?.patientHeight);\r\n    formData.append(\"patientWeight\", patientData?.patientWeight);\r\n    formData.append(\"patientGender\", patientData?.patientGender);\r\n    formData.append(\"patientBloodGroup\", patientData?.patientBloodGroup);\r\n    formData.append(\"patientLocalAddress\", patientData?.patientLocalAddress);\r\n    formData.append(\r\n      \"patientPermanentAddress\",\r\n      patientData?.patientPermanentAddress\r\n    );\r\n    formData.append(\"patientCity\", patientData?.patientCity);\r\n    formData.append(\"patientState\", patientData?.patientState);\r\n    formData.append(\"patientCountry\", patientData?.patientCountry);\r\n    formData.append(\"patientZipCode\", patientData?.patientZipCode);\r\n    formData.append(\"patientImage\", patientData?.patientImage);\r\n    formData.append(\r\n      \"createdBy\",\r\n      JSON.stringify({\r\n        email: adminLoggedInData?.adminEmail,\r\n        name: adminLoggedInData?.adminName,\r\n        role: adminLoggedInData?.adminRole,\r\n        id: adminLoggedInData?.adminId,\r\n      })\r\n    );\r\n    formData.append(\r\n      \"editedBy\",\r\n      JSON.stringify({\r\n        email: adminLoggedInData?.adminEmail,\r\n        name: adminLoggedInData?.adminName,\r\n        role: adminLoggedInData?.adminRole,\r\n        id: adminLoggedInData?.adminId,\r\n      })\r\n    );\r\n    formData.append(\"patientAdmittingCategory\", \"Emergency\");\r\n\r\n    if (submitButton === \"Save\") {\r\n      addPatient(formData);\r\n      setLoading(true);\r\n    }\r\n    if (submitButton === \"SavePrint\") {\r\n      console.log(\"Wait\");\r\n    }\r\n  };\r\n  return (\r\n    <Suspense fallback={<>...</>}>\r\n      <>\r\n        <div className='flex flex-col gap-[1rem] p-[1rem]'>\r\n          <div className='flex justify-between'>\r\n            <h2 className='border-b-[4px] border-[#3497F9]'>\r\n              Add New Emergency Patient\r\n            </h2>\r\n          </div>\r\n          <div className='flex flex-col w-full text-[#3E454D] items-start text-start gap-[1rem] px-[10px] pb-[2rem]'>\r\n            <form\r\n              className='flex flex-col gap-[1rem]'\r\n              onSubmit={handleSubmit(handleAddPatient)}>\r\n              {/* <div className='flex flex-col gap-[6px] border-b'>\r\n            <label className='text-[14px]'>Admit Category</label>\r\n            <RadioGroup\r\n              aria-labelledby='demo-radio-buttons-group-label'\r\n              value={patientAdmitCategory}\r\n              name='radio-buttons-group'\r\n              onChange={(e) => setPatientAdminCaetgory(e.target.value)}\r\n              sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value='OPD Patient'\r\n                control={<Radio />}\r\n                label='OPD Patient'\r\n              />\r\n              <FormControlLabel\r\n                value='Emergency'\r\n                control={<Radio />}\r\n                label='Emergency'\r\n              />\r\n            </RadioGroup>\r\n          </div> */}\r\n              <h2 className='border-b py-[1rem]'>Patient Information</h2>\r\n              <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Patients Name *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient name'\r\n                    {...register(\"patientName\", { required: true })}\r\n                  />\r\n                  {errors.patientName && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Email *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='email'\r\n                    required\r\n                    placeholder='Enter patient email'\r\n                    {...register(\"patientEmail\", { required: true })}\r\n                  />\r\n                  {errors.patientEmail && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Father Name</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    placeholder='Enter patient father name'\r\n                    {...register(\"patientFatherName\")}\r\n                  />\r\n                  {errors.patientFatherName && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Husband Name</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    placeholder='Enter patient husband name'\r\n                    {...register(\"patientHusbandName\")}\r\n                  />\r\n                  {errors.patientHusbandName && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Date Of Birth *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='date'\r\n                    required\r\n                    {...register(\"patientDateOfBirth\", { required: true })}\r\n                  />\r\n                  {errors.patientDateOfBirth && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Phone *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='number'\r\n                    required\r\n                    placeholder='Enter patient phone number'\r\n                    {...register(\"patientPhone\", {\r\n                      required: true,\r\n                      minLength: 10,\r\n                      maxLength: 10,\r\n                    })}\r\n                  />\r\n                  {errors.patientPhone && (\r\n                    <span className='text-[red]'>\r\n                      This field is required with 10 digits\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>\r\n                    Phone Number of Attendent\r\n                  </label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='number'\r\n                    placeholder='Enter phone number of attendent'\r\n                    {...register(\"patientPhone2\", {\r\n                      minLength: 10,\r\n                      maxLength: 10,\r\n                    })}\r\n                  />\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Height</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    placeholder='Enter height'\r\n                    {...register(\"patientHeight\")}\r\n                  />\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Weight</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    placeholder='Enter weight'\r\n                    {...register(\"patientWeight\")}\r\n                  />\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Blood Group *</label>\r\n                  <select\r\n                    className='py-[11.5px] outline-none border-b bg-transparent'\r\n                    {...register(\"patientBloodGroup\", { required: true })}>\r\n                    <option>O positive</option>\r\n                    <option>O negative</option>\r\n                    <option>A positive</option>\r\n                    <option>A negative</option>\r\n                    <option>B positive</option>\r\n                    <option>B negative</option>\r\n                    <option>AB positive</option>\r\n                    <option>AB negative</option>\r\n                  </select>\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Patient Gender *</label>\r\n                  <RadioGroup\r\n                    aria-labelledby='demo-radio-buttons-group-label'\r\n                    value={patientGender}\r\n                    name='radio-buttons-group'\r\n                    onChange={(e) => setPatientGender(e.target.value)}\r\n                    sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <FormControlLabel\r\n                      value='Female'\r\n                      control={<Radio />}\r\n                      label='Female'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='Male'\r\n                      control={<Radio />}\r\n                      label='Male'\r\n                    />\r\n                    <FormControlLabel\r\n                      value='Other'\r\n                      control={<Radio />}\r\n                      label='Other'\r\n                    />\r\n                  </RadioGroup>\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Patient Photo *</label>\r\n                  <div className='flex flex-col gap-[1rem]'>\r\n                    <input\r\n                      type='file'\r\n                      required\r\n                      accept='image/png, image/gif, image/jpeg'\r\n                      onChange={(e) => setPatientImage(e.target.files[0])}\r\n                    />\r\n                    <img\r\n                      className='object-contain w-[100px] h-[100px]'\r\n                      src={\r\n                        patientImage\r\n                          ? URL.createObjectURL(patientImage)\r\n                          : placeholder\r\n                      }\r\n                      alt='placeholderimg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patient Case</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={patientCase}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={(newContent) => setPatientCase(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={(newContent) => {\r\n                setPatientCase(newContent);\r\n              }}\r\n            />\r\n          </div> */}\r\n              <h3 className='border-b py-[1rem]'>Patient Address Details</h3>\r\n              <div className='grid grid-cols-2 gap-[2rem] border-b pb-[3rem]'>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Local Address *</label>\r\n                  <textarea\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient local address'\r\n                    {...register(\"patientLocalAddress\", { required: true })}\r\n                  />\r\n                  {errors.patientLocalAddress && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Permanent Address *</label>\r\n                  <textarea\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient permanent address'\r\n                    {...register(\"patientPermanentAddress\", { required: true })}\r\n                  />\r\n                  {errors.patientPermanentAddress && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>City *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient city'\r\n                    {...register(\"patientCity\", { required: true })}\r\n                  />\r\n                  {errors.patientCity && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>State *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient state'\r\n                    {...register(\"patientState\", { required: true })}\r\n                  />\r\n                  {errors.patientState && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Country *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='text'\r\n                    required\r\n                    placeholder='Enter patient country'\r\n                    {...register(\"patientCountry\", { required: true })}\r\n                  />\r\n                  {errors.patientCountry && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col gap-[6px]'>\r\n                  <label className='text-[14px]'>Zipcode *</label>\r\n                  <input\r\n                    className='py-[10px] outline-none border-b'\r\n                    type='number'\r\n                    required\r\n                    placeholder='Enter patient zipcode'\r\n                    {...register(\"patientZipCode\", { required: true })}\r\n                  />\r\n                  {errors.patientZipcode && (\r\n                    <span className='text-[red]'>This field is required</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {loading ? (\r\n                <div className='flex flex-row justify-center w-full'>\r\n                  <Box sx={{ display: \"flex\" }}>\r\n                    <CircularProgress color='inherit' />\r\n                  </Box>\r\n                </div>\r\n              ) : (\r\n                <div className='flex gap-[1rem] items-center'>\r\n                  <button\r\n                    type='submit'\r\n                    className='buttonFilled'\r\n                    onClick={() => setSubmitButton(\"Save\")}>{`Save >`}</button>\r\n                  <button\r\n                    className='buttonOutlined'\r\n                    onClick={() =>\r\n                      setSubmitButton(\"SavePrint\")\r\n                    }>{`Save & Print >`}</button>\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {/* Success Snackbar */}\r\n        <Snackbars\r\n          open={openSnackbarSuccess}\r\n          setOpen={setOpenSnackBarSuccess}\r\n          severity='success'\r\n          message={snackBarMessageSuccess}\r\n        />\r\n        {/* Warning Snackbar */}\r\n        <Snackbars\r\n          open={openSnackbarWarning}\r\n          setOpen={setOpenSnackBarWarning}\r\n          severity='warning'\r\n          message={snackBarMessageWarning}\r\n        />\r\n      </>\r\n    </Suspense>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n// import Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nexport default function Snackbars({ open, setOpen, severity, message }) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleClick}>Open Snackbar</Button> */}\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={severity}\r\n          variant='filled'\r\n          sx={{ width: \"100%\" }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AddEmergencyPatientForm","dispatch","useDispatch","addPatient","responseAddPatient","useAddPatientMutation","loading","setLoading","useState","adminLoggedInData","useSelector","state","AdminState","patientGender","setPatientGender","React","patientImage","setPatientImage","submitButton","setSubmitButton","register","handleSubmit","watch","reset","formState","errors","useForm","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","_responseAddPatient$d","isSuccess","createPatientChange","Math","random","data","message","setTimeout","isError","_responseAddPatient$e","_responseAddPatient$e2","error","_jsx","Suspense","fallback","_Fragment","children","_jsxs","className","onSubmit","patientData","formData","FormData","append","patientName","patientEmail","patientFatherName","patientHusbandName","patientDateOfBirth","patientPhone","patientPhone2","patientHeight","patientWeight","patientBloodGroup","patientLocalAddress","patientPermanentAddress","patientCity","patientState","patientCountry","patientZipCode","JSON","stringify","email","adminEmail","name","adminName","role","adminRole","id","adminId","console","log","type","required","placeholder","minLength","maxLength","RadioGroup","value","onChange","e","target","sx","display","flexDirection","FormControlLabel","control","Radio","label","accept","files","src","URL","createObjectURL","alt","patientZipcode","Box","CircularProgress","color","onClick","Snackbars","open","setOpen","severity","_ref","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","variant","width"],"sourceRoot":""}