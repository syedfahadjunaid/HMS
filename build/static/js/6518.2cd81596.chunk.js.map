{"version":3,"file":"static/js/6518.2cd81596.chunk.js","mappings":"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","sources":["components/DialogBoxToDelete.js","components/Pagination.js","components/Table.js","components/superadmin/PatientTable/PatientTable.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogBoxToDelete({\r\n  open,\r\n\r\n  handleAgree,\r\n  setOpen,\r\n  message,\r\n}) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby='alert-dialog-slide-description'>\r\n        <DialogTitle>{\"Delete\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-slide-description'>\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleAgree}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\n\r\nexport default function PaginationComponent({\r\n  page,\r\n  handleChangePage,\r\n  rowsPerPage,\r\n  handleChangeRowsPerPage,\r\n  data,\r\n}) {\r\n  // const [page, setPage] = React.useState(2);\r\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(parseInt(event.target.value, 10));\r\n  //   setPage(0);\r\n  // };\r\n  // console.log(data.length);\r\n  return (\r\n    <TablePagination\r\n      style={{ backgroundColor: \"white\" }}\r\n      rowsPerPageOptions={[5, 10, 20, 50]}\r\n      component='div'\r\n      count={data.length}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n    />\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport PaginationComponent from \"./Pagination\";\r\nimport { useState } from \"react\";\r\n// import { CiMenuKebab } from 'react-icons/ci';\r\n\r\n// function Echo({children}) {    /// can be used instead of Fragment\r\n//     return children;\r\n// }\r\n\r\nfunction Table({ data, config, keyFn }) {\r\n  //Table Pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // ////////////////////////////////////////\r\n\r\n  const renderedHeaders = config?.map((column) => {\r\n    if (column.header) {\r\n      return <Fragment key={column.label}>{column.header()}</Fragment>;\r\n    }\r\n    return (\r\n      <th\r\n        className='text-center px-[4px] border-b-[1px] p-[10px]'\r\n        key={column.label}>\r\n        {column.label}\r\n      </th>\r\n    );\r\n  });\r\n\r\n  const renderedRows = data\r\n    ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n    ?.map((row, index) => {\r\n      const renderedCells = config?.map((column, index) => {\r\n        return (\r\n          <td\r\n            key={`column-${index}`}\r\n            className='justify-center text-[12px] py-4 px-[4px] text-center border-b-[1px]'>\r\n            {column.render(row)}\r\n          </td>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <tr className='' key={keyFn(row)}>\r\n          {renderedCells}\r\n          {/* {\r\n            <div className=\"flex flex-row items-center justify-center\">\r\n              <CiMenuKebab\r\n                onClick={() => setActionBar(`${row.id}-${index}`)}\r\n                className=\"h-full w-fit\"\r\n              />\r\n              {actionBar ? (\r\n                <div className=\"flex flex-col bg-white p-[8px] shadow-md\">\r\n                  <p className=\"border-b\">Edit</p>\r\n                  <p className=\"\">Delete</p>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          } */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <table className='w-full table-auto border-spacing-2 text-[#595959] font-[300]'>\r\n        <thead>\r\n          <tr className='border-b-[1px]'>{renderedHeaders}</tr>\r\n        </thead>\r\n        <tbody>{renderedRows}</tbody>\r\n      </table>\r\n      <PaginationComponent\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        data={data}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import { Suspense } from \"react\";\r\n\r\nimport \"./PatientTable.css\";\r\n\r\nimport Table from \"../../Table\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { MdViewKanban } from \"react-icons/md\";\r\nimport { RiEdit2Fill } from \"react-icons/ri\";\r\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\r\nimport { LuHardDriveDownload } from \"react-icons/lu\";\r\n\r\nimport * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\n// import Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\n\r\nimport Snackbars from \"../../SnackBar\";\r\nimport DialogBoxToDelete from \"../../DialogBoxToDelete\";\r\n\r\nimport placeholder from \"../../../assets/imageplaceholder.png\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  useAddPatientMutation,\r\n  useUpdatePatientByIdMutation,\r\n  useDeletePatientByIdMutation,\r\n} from \"../../../Store/Services/PatientService\";\r\nimport {\r\n  createPatientChange,\r\n  updatePatientChange,\r\n  deletePatientChange,\r\n} from \"../../../Store/Slices/PatientSlice\";\r\n\r\nexport default function PatientTable() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { adminLoggedInData } = useSelector((state) => state.AdminState);\r\n\r\n  const { patients } = useSelector((state) => state.PatientState);\r\n  // console.log(patients);\r\n  const [addPatient, responseAddPatient] = useAddPatientMutation();\r\n  const [updatePatientById, responseUpdatePatientById] =\r\n    useUpdatePatientByIdMutation();\r\n  const [deletePatientById, responseDeletePatientById] =\r\n    useDeletePatientByIdMutation();\r\n\r\n  const [patientId, setPatientId] = React.useState(\"\");\r\n  const [patientIdToDelete, setPatientIdToDelete] = React.useState(\"\");\r\n  const [patientData, setPatientData] = React.useState(\"\");\r\n\r\n  // states\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [patientEmail, setPatientEmail] = React.useState(\"\");\r\n  const [patientFatherName, setPatientFatherName] = React.useState(\"\");\r\n  const [patientHusbandName, setPatientHusbandName] = React.useState(\"\");\r\n  const [patientDateOfBirth, setPatientDateOfBirth] = React.useState(\"\");\r\n  const [patientPhone, setPatientPhone] = React.useState(\"\");\r\n  const [patientPhone2, setPatientPhone2] = React.useState(\"\");\r\n  const [patientHeight, setPatientHeight] = React.useState(\"\");\r\n  const [patientWeight, setPatientWeight] = React.useState(\"\");\r\n  const [patientBloodGroup, setPatientBloodGroup] = React.useState(\"\");\r\n  const [patientLocalAddress, setPatientLocalAddress] = React.useState(\"\");\r\n  const [patientPermanentAddress, setPatientPermanentAddress] =\r\n    React.useState(\"\");\r\n  const [patientCity, setPatientCity] = React.useState(\"\");\r\n  const [patientState, setPatientState] = React.useState(\"\");\r\n  const [patientCountry, setPatientCountry] = React.useState(\"\");\r\n  const [patientZipCode, setPatientZipCode] = React.useState(\"\");\r\n  const [patientImage, setPatientImage] = React.useState();\r\n  const [patientGender, setPatientGender] = React.useState(\"Female\");\r\n\r\n  // Snackbar--------------------\r\n  // ----Succcess\r\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\r\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarSuccess = () => {\r\n    setOpenSnackBarSuccess(true);\r\n  };\r\n  // ----Warning\r\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\r\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarWarning = () => {\r\n    setOpenSnackBarWarning(true);\r\n  };\r\n  // ----------------------------\r\n\r\n  // Dialog Box------------------------\r\n  const [openDialogBox, setOpenDialogBox] = React.useState(false);\r\n  const [dialogBoxMessage, setDialogMessage] = React.useState(\r\n    \"Are you sure you want to delete?\"\r\n  );\r\n\r\n  const handleClickOpenDialogBox = (data) => {\r\n    setPatientIdToDelete(data?.patientId);\r\n    setDialogMessage(`Are you sure you want to delete ${data?.patientId} ?`);\r\n    setOpenDialogBox(true);\r\n  };\r\n  const handleAgreeDialogBoxToDelete = () => {\r\n    deletePatientById(patientIdToDelete);\r\n    setOpenDialogBox(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (responseDeletePatientById.isSuccess) {\r\n      dispatch(deletePatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseDeletePatientById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleAgreeDialogBoxToDelete();\r\n      setPatientIdToDelete(\"\");\r\n    }\r\n    if (responseDeletePatientById.isError) {\r\n      setSnackBarSuccessWarning(responseDeletePatientById?.error?.data?.error);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [responseDeletePatientById.isSuccess, responseDeletePatientById.isError]);\r\n\r\n  // ----------------------------------\r\n\r\n  const date = (dateTime) => {\r\n    const newdate = new Date(dateTime);\r\n\r\n    return newdate.toLocaleDateString();\r\n  };\r\n\r\n  const time = (dateTime) => {\r\n    const newDate = new Date(dateTime);\r\n\r\n    return newDate.toLocaleTimeString();\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"12px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  // View Modal\r\n  const [openViewModal, setOpenViewModal] = React.useState(false);\r\n  const handleOpenViewModal = (data) => {\r\n    setPatientData(data);\r\n    setOpenViewModal(true);\r\n  };\r\n  const handleCloseViewModal = () => setOpenViewModal(false);\r\n\r\n  const modalViewPatientDetails = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <div className='border-b flex gap-[1rem] py-[1rem] w-full'>\r\n        <h3 className='font-[500]'>Patient ID: </h3>\r\n        <h3>{patientData?.patientId}</h3>\r\n      </div>\r\n      <div className='flex w-full'>\r\n        <div className='w-[25%] flex flex-col items-center'>\r\n          <img\r\n            className='w-[200px] h-[200px] object-contain'\r\n            src={\r\n              patientData.patientImage\r\n                ? process.env.React_App_Base_Image_Url +\r\n                  patientData.patientImage\r\n                : placeholder\r\n            }\r\n            alt='patientImage'\r\n          />\r\n          <button className='buttonFilled w-fit'>Button</button>\r\n        </div>\r\n        <div className='w-[75%] flex flex-col gap-[10px] text-[14px]'>\r\n          <div className='grid grid-cols-2 gap-[10px]'>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Name: </p>\r\n              <p>{patientData.patientName}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Gender: </p>\r\n              <p>{patientData.patientGender}</p>\r\n            </div>\r\n            {patientData.patientFatherName !== \"\" && (\r\n              <div className='flex'>\r\n                <p className='font-[600] w-[150px]'>Father Name: </p>\r\n                <p>{patientData.patientFatherName}</p>\r\n              </div>\r\n            )}\r\n            {patientData.patientHusbandName !== \"\" && (\r\n              <div className='flex'>\r\n                <p className='font-[600] w-[150px]'>Husband Name: </p>\r\n                <p>{patientData.patientHusbandName}</p>\r\n              </div>\r\n            )}\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Date Of Birth: </p>\r\n              <p>{patientData.patientDateOfBirth}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Phone: </p>\r\n              <p>{patientData.patientPhone}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Attendent Phone: </p>\r\n              <p>{patientData.patientPhone2}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Height: </p>\r\n              <p>{patientData.patientHeight}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Weight: </p>\r\n              <p>{patientData.patientWeight}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Blood Group: </p>\r\n              <p>{patientData.patientBloodGroup}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>City: </p>\r\n              <p>{patientData.patientCity}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>State: </p>\r\n              <p>{patientData.patientState}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Country: </p>\r\n              <p>{patientData.patientCountry}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Zipcode: </p>\r\n              <p>{patientData.patientZipCode}</p>\r\n            </div>\r\n          </div>\r\n          <div className='flex flex-col gap-[10px]'>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Email Id: </p>\r\n              <p className='text-[14px]'>{patientData.patientEmail}</p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Local Address: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {patientData.patientLocalAddress}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Permanent Address: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {patientData.patientPermanentAddress}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Created On: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {`${date(patientData?.createdAt)} ${time(\r\n                  patientData?.createdAt\r\n                )}`}\r\n              </p>\r\n            </div>\r\n            <div className='flex'>\r\n              <p className='font-[600] w-[150px]'>Updated On: </p>\r\n              <p className='break-word text-[14px]'>\r\n                {`${date(patientData?.updatedAt)} ${time(\r\n                  patientData?.updatedAt\r\n                )}`}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {/* <div className='grid grid-cols-2 gap-[10px]'>\r\n            \r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // console.log(patientData);\r\n\r\n  // Add Modal\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // Update Modal\r\n  const [openUpdateModal, setOpenUpdateModal] = React.useState(false);\r\n  const handleOpenUpdateModal = (data) => {\r\n    setPatientId(data?.patientId);\r\n    setPatientName(data?.patientName);\r\n    setPatientEmail(data?.patientEmail);\r\n    setPatientFatherName(data?.patientFatherName);\r\n    setPatientHusbandName(data?.patientHusbandName);\r\n    setPatientDateOfBirth(data?.patientDateOfBirth);\r\n    setPatientPhone(data?.patientPhone);\r\n    setPatientPhone2(data?.patientPhone2);\r\n    setPatientHeight(data?.patientHeight);\r\n    setPatientWeight(data?.patientWeight);\r\n    setPatientBloodGroup(data?.patientBloodGroup);\r\n    setPatientLocalAddress(data?.patientLocalAddress);\r\n    setPatientPermanentAddress(data?.patientPermanentAddress);\r\n    setPatientCity(data?.patientCity);\r\n    setPatientState(data?.patientState);\r\n    setPatientCountry(data?.patientCountry);\r\n    setPatientZipCode(data?.patientZipCode);\r\n    setPatientGender(data?.patientGender);\r\n    setOpenUpdateModal(true);\r\n  };\r\n  const handleCloseUpdateModal = () => setOpenUpdateModal(false);\r\n\r\n  // Add Patient\r\n  React.useEffect(() => {\r\n    if (responseAddPatient.isSuccess) {\r\n      dispatch(createPatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseAddPatient?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleClose();\r\n\r\n      setPatientImage();\r\n      setPatientGender(\"Female\");\r\n      reset();\r\n    } else if (responseAddPatient.isError) {\r\n      setSnackBarSuccessWarning(responseAddPatient?.error?.data?.error);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [responseAddPatient.isSuccess, responseAddPatient.isError]);\r\n\r\n  const handleAddPatient = (data) => {\r\n    const patientData = { ...data, patientGender, patientImage };\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"patientName\", patientData?.patientName);\r\n    formData.append(\"patientEmail\", patientData?.patientEmail);\r\n    formData.append(\"patientFatherName\", patientData?.patientFatherName);\r\n    formData.append(\"patientHusbandName\", patientData?.patientHusbandName);\r\n    formData.append(\"patientDateOfBirth\", patientData?.patientDateOfBirth);\r\n    formData.append(\"patientPhone\", patientData?.patientPhone);\r\n    formData.append(\"patientPhone2\", patientData?.patientPhone2);\r\n    formData.append(\"patientHeight\", patientData?.patientHeight);\r\n    formData.append(\"patientWeight\", patientData?.patientWeight);\r\n    formData.append(\"patientGender\", patientData?.patientGender);\r\n    formData.append(\"patientBloodGroup\", patientData?.patientBloodGroup);\r\n    formData.append(\"patientLocalAddress\", patientData?.patientLocalAddress);\r\n    formData.append(\r\n      \"patientPermanentAddress\",\r\n      patientData?.patientPermanentAddress\r\n    );\r\n    formData.append(\"patientCity\", patientData?.patientCity);\r\n    formData.append(\"patientState\", patientData?.patientState);\r\n    formData.append(\"patientCountry\", patientData?.patientCountry);\r\n    formData.append(\"patientZipCode\", patientData?.patientZipCode);\r\n    formData.append(\"patientImage\", patientData?.patientImage);\r\n    formData.append(\r\n      \"createdBy\",\r\n      JSON.stringify({\r\n        email: adminLoggedInData?.adminEmail,\r\n        name: adminLoggedInData?.adminName,\r\n        role: adminLoggedInData?.adminRole,\r\n        id: adminLoggedInData?.adminId,\r\n      })\r\n    );\r\n    formData.append(\r\n      \"editedBy\",\r\n      JSON.stringify({\r\n        email: adminLoggedInData?.adminEmail,\r\n        name: adminLoggedInData?.adminName,\r\n        role: adminLoggedInData?.adminRole,\r\n        id: adminLoggedInData?.adminId,\r\n      })\r\n    );\r\n\r\n    addPatient(formData);\r\n  };\r\n\r\n  const modalADDPatient = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <h2 className='border-b py-[1rem]'>Add Patient Information</h2>\r\n      <form\r\n        className='flex flex-col gap-[1rem]'\r\n        onSubmit={handleSubmit(handleAddPatient)}>\r\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patients Name *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient name'\r\n              {...register(\"patientName\", { required: true })}\r\n            />\r\n            {errors.patientName && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Email *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='email'\r\n              required\r\n              placeholder='Enter patient email'\r\n              {...register(\"patientEmail\", { required: true })}\r\n            />\r\n            {errors.patientEmail && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Father Name</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter patient father name'\r\n              {...register(\"patientFatherName\")}\r\n            />\r\n            {errors.patientFatherName && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Husband Name</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter patient husband name'\r\n              {...register(\"patientHusbandName\")}\r\n            />\r\n            {errors.patientHusbandName && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Date Of Birth *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='date'\r\n              required\r\n              {...register(\"patientDateOfBirth\", { required: true })}\r\n            />\r\n            {errors.patientDateOfBirth && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Phone *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              required\r\n              minLength={10}\r\n              maxLength={10}\r\n              placeholder='Enter patient phone number'\r\n              {...register(\"patientPhone\", { required: true })}\r\n            />\r\n            {errors.patientPhone && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Phone Number of Attendent</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              minLength={10}\r\n              maxLength={10}\r\n              placeholder='Enter phone number of attendent'\r\n              {...register(\"patientPhone2\")}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Height</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter height'\r\n              {...register(\"patientHeight\")}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Weight</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter weight'\r\n              {...register(\"patientWeight\")}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patient Gender *</label>\r\n            <RadioGroup\r\n              aria-labelledby='demo-radio-buttons-group-label'\r\n              value={patientGender}\r\n              name='radio-buttons-group'\r\n              onChange={(e) => setPatientGender(e.target.value)}\r\n              sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value='Female'\r\n                control={<Radio />}\r\n                label='Female'\r\n              />\r\n              <FormControlLabel value='Male' control={<Radio />} label='Male' />\r\n              <FormControlLabel\r\n                value='Other'\r\n                control={<Radio />}\r\n                label='Other'\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Blood Group *</label>\r\n            <select\r\n              className='py-[11.5px] outline-none border-b bg-transparent'\r\n              {...register(\"patientBloodGroup\", { required: true })}>\r\n              <option>O positive</option>\r\n              <option>O negative</option>\r\n              <option>A positive</option>\r\n              <option>A negative</option>\r\n              <option>B positive</option>\r\n              <option>B negative</option>\r\n              <option>AB positive</option>\r\n              <option>AB negative</option>\r\n            </select>\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patient Photo *</label>\r\n            <div className='flex flex-col gap-[1rem]'>\r\n              <input\r\n                type='file'\r\n                required\r\n                accept='image/png, image/gif, image/jpeg'\r\n                onChange={(e) => setPatientImage(e.target.files[0])}\r\n              />\r\n\r\n              <img\r\n                className='object-contain w-[100px] h-[100px]'\r\n                src={\r\n                  patientImage ? URL.createObjectURL(patientImage) : placeholder\r\n                }\r\n                alt='placeholderimg'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 className='border-b py-[1rem]'>Patient Address Details</h3>\r\n        <div className='grid grid-cols-2 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Local Address *</label>\r\n            <textarea\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient local address'\r\n              {...register(\"patientLocalAddress\", { required: true })}\r\n            />\r\n            {errors.patientLocalAddress && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Permanent Address *</label>\r\n            <textarea\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient permanent address'\r\n              {...register(\"patientPermanentAddress\", { required: true })}\r\n            />\r\n            {errors.patientPermanentAddress && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>City *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient city'\r\n              {...register(\"patientCity\", { required: true })}\r\n            />\r\n            {errors.patientCity && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>State *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient state'\r\n              {...register(\"patientState\", { required: true })}\r\n            />\r\n            {errors.patientState && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Country *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient country'\r\n              {...register(\"patientCountry\", { required: true })}\r\n            />\r\n            {errors.patientCountry && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Zipcode *</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              required\r\n              placeholder='Enter patient zipcode'\r\n              {...register(\"patientZipCode\", { required: true })}\r\n            />\r\n            {errors.patientZipcode && (\r\n              <span className='text-[red]'>This field is required</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='flex gap-[1rem] items-center'>\r\n          <button\r\n            type='submit'\r\n            className='buttonFilled'>{`Save & Print >`}</button>\r\n          <button className='buttonOutlined'>{`Save >`}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  // Update Patient\r\n  React.useEffect(() => {\r\n    if (responseUpdatePatientById.isSuccess) {\r\n      dispatch(updatePatientChange(Math.random()));\r\n      setSnackBarSuccessMessage(responseUpdatePatientById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleCloseUpdateModal();\r\n\r\n      setPatientImage();\r\n      setPatientGender(\"Female\");\r\n      reset();\r\n    } else if (responseUpdatePatientById.isError) {\r\n      setSnackBarSuccessWarning(responseUpdatePatientById?.error?.data?.error);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [responseUpdatePatientById.isSuccess, responseUpdatePatientById.isError]);\r\n\r\n  // console.log(responseUpdatePatientById);\r\n\r\n  const handleUpdatePatient = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"patientName\", patientName);\r\n    formData.append(\"patientEmail\", patientEmail);\r\n    formData.append(\"patientFatherName\", patientFatherName);\r\n    formData.append(\"patientHusbandName\", patientHusbandName);\r\n    formData.append(\"patientDateOfBirth\", patientDateOfBirth);\r\n    formData.append(\"patientPhone\", patientPhone);\r\n    formData.append(\"patientPhone2\", patientPhone2);\r\n    formData.append(\"patientHeight\", patientHeight);\r\n    formData.append(\"patientWeight\", patientWeight);\r\n    formData.append(\"patientGender\", patientGender);\r\n    formData.append(\"patientBloodGroup\", patientBloodGroup);\r\n    formData.append(\"patientLocalAddress\", patientLocalAddress);\r\n    formData.append(\"patientPermanentAddress\", patientPermanentAddress);\r\n    formData.append(\"patientCity\", patientCity);\r\n    formData.append(\"patientState\", patientState);\r\n    formData.append(\"patientCountry\", patientCountry);\r\n    formData.append(\"patientZipCode\", patientZipCode);\r\n    formData.append(\"patientImage\", patientImage);\r\n    formData.append(\r\n      \"editedBy\",\r\n      JSON.stringify({\r\n        email: adminLoggedInData?.adminEmail,\r\n        name: adminLoggedInData?.adminName,\r\n        role: adminLoggedInData?.adminRole,\r\n        id: adminLoggedInData?.adminId,\r\n      })\r\n    );\r\n\r\n    const updateData = {\r\n      id: patientId,\r\n      data: formData,\r\n    };\r\n\r\n    updatePatientById(updateData);\r\n  };\r\n\r\n  const modalUpdatePatient = (\r\n    <div className='flex flex-col w-full text-[#3E454D] gap-[2rem] overflow-y-scroll px-[10px] pb-[2rem] h-[450px]'>\r\n      <h2 className='border-b py-[1rem]'>Update Patient Information</h2>\r\n      <form className='flex flex-col gap-[1rem]' onSubmit={handleUpdatePatient}>\r\n        <div className='grid grid-cols-3 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patients Name</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              value={patientName}\r\n              placeholder='Enter patient name'\r\n              onChange={(e) => setPatientName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Email</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='email'\r\n              required\r\n              disabled\r\n              value={patientEmail}\r\n              placeholder='Enter patient email'\r\n              onChange={(e) => setPatientEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          {patientFatherName !== \"\" && (\r\n            <div className='flex flex-col gap-[6px]'>\r\n              <label className='text-[14px]'>Father Name</label>\r\n              <input\r\n                className='py-[10px] outline-none border-b'\r\n                type='text'\r\n                value={patientFatherName}\r\n                placeholder='Enter patient father name'\r\n                onChange={(e) => setPatientFatherName(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          {patientHusbandName !== \"\" && (\r\n            <div className='flex flex-col gap-[6px]'>\r\n              <label className='text-[14px]'>Husband Name</label>\r\n              <input\r\n                className='py-[10px] outline-none border-b'\r\n                type='text'\r\n                value={patientHusbandName}\r\n                placeholder='Enter patient husband name'\r\n                onChange={(e) => setPatientHusbandName(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Date Of Birth</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='date'\r\n              required\r\n              value={patientDateOfBirth}\r\n              onChange={(e) => setPatientDateOfBirth(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Phone</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              required\r\n              disabled\r\n              minLength={10}\r\n              maxLength={10}\r\n              placeholder='Enter patient phone number'\r\n              value={patientPhone}\r\n              onChange={(e) => setPatientPhone(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Phone number of attendent</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              minLength={10}\r\n              maxLength={10}\r\n              placeholder='Enter phone number of attendent'\r\n              value={patientPhone2}\r\n              onChange={(e) => setPatientPhone2(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Height</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter height'\r\n              value={patientHeight}\r\n              onChange={(e) => setPatientHeight(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Weight</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              placeholder='Enter weight'\r\n              value={patientWeight}\r\n              onChange={(e) => setPatientWeight(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patient Gender</label>\r\n            <RadioGroup\r\n              aria-labelledby='demo-radio-buttons-group-label'\r\n              value={patientGender}\r\n              name='radio-buttons-group'\r\n              onChange={(e) => setPatientGender(e.target.value)}\r\n              sx={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <FormControlLabel\r\n                value='Female'\r\n                control={<Radio />}\r\n                label='Female'\r\n              />\r\n              <FormControlLabel value='Male' control={<Radio />} label='Male' />\r\n              <FormControlLabel\r\n                value='Other'\r\n                control={<Radio />}\r\n                label='Other'\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Blood Group</label>\r\n            <select\r\n              className='py-[11.5px] outline-none border-b bg-transparent'\r\n              value={patientBloodGroup}\r\n              onChange={(e) => setPatientBloodGroup(e.target.value)}>\r\n              <option>O positive</option>\r\n              <option>O negative</option>\r\n              <option>A positive</option>\r\n              <option>A negative</option>\r\n              <option>B positive</option>\r\n              <option>B negative</option>\r\n              <option>AB positive</option>\r\n              <option>AB negative</option>\r\n            </select>\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Patient Photo</label>\r\n            <div className='flex flex-col gap-[1rem]'>\r\n              <input\r\n                type='file'\r\n                accept='image/png, image/gif, image/jpeg'\r\n                onChange={(e) => setPatientImage(e.target.files[0])}\r\n              />\r\n\r\n              <img\r\n                className='object-contain w-[100px] h-[100px]'\r\n                src={\r\n                  patientImage ? URL.createObjectURL(patientImage) : placeholder\r\n                }\r\n                alt='placeholderimg'\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 className='border-b py-[1rem]'>Patient Address Details</h3>\r\n        <div className='grid grid-cols-2 gap-[2rem] border-b pb-[3rem]'>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Local Address</label>\r\n            <textarea\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient local address'\r\n              value={patientLocalAddress}\r\n              onChange={(e) => setPatientLocalAddress(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Permanent Address</label>\r\n            <textarea\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient permanent address'\r\n              value={patientPermanentAddress}\r\n              onChange={(e) => setPatientPermanentAddress(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>City</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient city'\r\n              value={patientCity}\r\n              onChange={(e) => setPatientCity(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>State</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient state'\r\n              value={patientState}\r\n              onChange={(e) => setPatientState(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Country</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='text'\r\n              required\r\n              placeholder='Enter patient country'\r\n              value={patientCountry}\r\n              onChange={(e) => setPatientCountry(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className='flex flex-col gap-[6px]'>\r\n            <label className='text-[14px]'>Zipcode</label>\r\n            <input\r\n              className='py-[10px] outline-none border-b'\r\n              type='number'\r\n              required\r\n              placeholder='Enter patient zipcode'\r\n              value={patientZipCode}\r\n              onChange={(e) => setPatientZipCode(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='flex gap-[1rem] items-center'>\r\n          <button\r\n            type='submit'\r\n            className='buttonFilled'>{`Save & Print >`}</button>\r\n          <button className='buttonOutlined'>{`Save >`}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const filteredArray = patients?.filter((data) => {\r\n    if (search !== \"\") {\r\n      const userSearch = search.toLowerCase();\r\n      const searchInData = data?.patientId?.toLowerCase();\r\n\r\n      return searchInData?.startsWith(userSearch);\r\n    }\r\n    return data;\r\n  });\r\n\r\n  const mappedBillData = filteredArray;\r\n\r\n  const config = [\r\n    {\r\n      label: \"Reg No.\",\r\n      render: (list) => list.patientId,\r\n    },\r\n    {\r\n      label: \"Patient Name\",\r\n      render: (list) => list.patientName,\r\n    },\r\n    {\r\n      label: \"Patient Email\",\r\n      render: (list) => list.patientEmail,\r\n    },\r\n    {\r\n      label: \"Patient Phone\",\r\n      render: (list) => list.patientPhone,\r\n    },\r\n    {\r\n      label: \"Date Created\",\r\n      render: (list) => date(list.createdAt),\r\n    },\r\n    {\r\n      label: \"Blood Group\",\r\n      render: (list) => list.patientBloodGroup,\r\n    },\r\n    {\r\n      label: \"Action\",\r\n      render: (list) => (\r\n        <div className='flex gap-[10px] justify-center'>\r\n          <div\r\n            onClick={() => handleOpenViewModal(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#96999C] rounded-[12px] cursor-pointer'>\r\n            <MdViewKanban className='text-[25px] text-[#96999C]' />\r\n          </div>\r\n          <div\r\n            onClick={() => handleOpenUpdateModal(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#3497F9] rounded-[12px] cursor-pointer'>\r\n            <RiEdit2Fill className='text-[25px] text-[#3497F9]' />\r\n          </div>\r\n          <div\r\n            onClick={() => handleClickOpenDialogBox(list)}\r\n            className='p-[4px] h-fit w-fit border-[2px] border-[#EB5757] rounded-[12px] cursor-pointer'>\r\n            <RiDeleteBin6Fill className='text-[25px] text-[#EB5757]' />\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyFn = (list) => {\r\n    return list.patientName;\r\n  };\r\n  return (\r\n    <Suspense fallback={<>...</>}>\r\n      <div className='flex flex-col gap-[1rem] p-[1rem]'>\r\n        <div className='flex justify-between'>\r\n          <h2 className='border-b-[4px] border-[#3497F9]'>Patient</h2>\r\n          <button\r\n            onClick={handleOpen}\r\n            className='bg-[#3497F9] text-white p-[10px] rounded-md'>\r\n            + Add Patient\r\n          </button>\r\n        </div>\r\n        <div className='flex justify-between'>\r\n          <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <FaSearch className='text-[#56585A]' />\r\n            <input\r\n              className='bg-transparent outline-none'\r\n              placeholder='Search by patient id'\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          {/* <div className='flex gap-[10px] bg-[#F4F6F6] items-center p-[10px] rounded-[18px]'>\r\n            <input type='date' className='bg-transparent outline-none' />\r\n          </div> */}\r\n        </div>\r\n        <Table data={mappedBillData} config={config} keyFn={keyFn} />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n              Add Patient\r\n            </h1>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalADDPatient}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdateModal}\r\n        onClose={handleCloseUpdateModal}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n              Update Patient\r\n            </h1>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalUpdatePatient}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={openViewModal}\r\n        onClose={handleCloseViewModal}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'>\r\n        <Box sx={style}>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            <div className='flex justify-between items-center'>\r\n              <h1 className='headingBottomUnderline w-fit pb-[10px]'>\r\n                Patient Details\r\n              </h1>\r\n              <button className='buttonFilled flex items-center gap-[10px]'>\r\n                <LuHardDriveDownload />\r\n                <p>Download</p>\r\n              </button>\r\n            </div>\r\n          </Typography>\r\n          <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n            {modalViewPatientDetails}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      {/* Success Snackbar */}\r\n      <Snackbars\r\n        open={openSnackbarSuccess}\r\n        setOpen={setOpenSnackBarSuccess}\r\n        severity='success'\r\n        message={snackBarMessageSuccess}\r\n      />\r\n      {/* Warning Snackbar */}\r\n      <Snackbars\r\n        open={openSnackbarWarning}\r\n        setOpen={setOpenSnackBarWarning}\r\n        severity='warning'\r\n        message={snackBarMessageWarning}\r\n      />\r\n      <DialogBoxToDelete\r\n        open={openDialogBox}\r\n        setOpen={setOpenDialogBox}\r\n        handleAgree={handleAgreeDialogBoxToDelete}\r\n        message={dialogBoxMessage}\r\n      />\r\n    </Suspense>\r\n  );\r\n}\r\n"],"names":["Transition","React","props","ref","_jsx","Slide","direction","DialogBoxToDelete","_ref","open","handleAgree","setOpen","message","handleClose","children","_jsxs","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","PaginationComponent","page","handleChangePage","rowsPerPage","handleChangeRowsPerPage","data","TablePagination","style","backgroundColor","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_data$slice","config","keyFn","setPage","useState","setRowsPerPage","renderedHeaders","map","column","header","Fragment","label","className","renderedRows","slice","row","index","renderedCells","render","concat","event","newPage","parseInt","target","value","PatientTable","dispatch","useDispatch","adminLoggedInData","useSelector","state","AdminState","patients","PatientState","addPatient","responseAddPatient","useAddPatientMutation","updatePatientById","responseUpdatePatientById","useUpdatePatientByIdMutation","deletePatientById","responseDeletePatientById","useDeletePatientByIdMutation","patientId","setPatientId","patientIdToDelete","setPatientIdToDelete","patientData","setPatientData","patientName","setPatientName","patientEmail","setPatientEmail","patientFatherName","setPatientFatherName","patientHusbandName","setPatientHusbandName","patientDateOfBirth","setPatientDateOfBirth","patientPhone","setPatientPhone","patientPhone2","setPatientPhone2","patientHeight","setPatientHeight","patientWeight","setPatientWeight","patientBloodGroup","setPatientBloodGroup","patientLocalAddress","setPatientLocalAddress","patientPermanentAddress","setPatientPermanentAddress","patientCity","setPatientCity","patientState","setPatientState","patientCountry","setPatientCountry","patientZipCode","setPatientZipCode","patientImage","setPatientImage","patientGender","setPatientGender","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","handleClickSnackbarSuccess","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","handleClickSnackbarWarning","openDialogBox","setOpenDialogBox","dialogBoxMessage","setDialogMessage","handleAgreeDialogBoxToDelete","_responseDeletePatien","_responseDeletePatien2","_responseDeletePatien3","isSuccess","deletePatientChange","Math","random","isError","error","date","dateTime","Date","toLocaleDateString","time","toLocaleTimeString","register","handleSubmit","watch","reset","formState","errors","useForm","position","top","left","transform","width","height","bgcolor","borderRadius","border","outline","boxShadow","p","openViewModal","setOpenViewModal","modalViewPatientDetails","src","process","placeholder","alt","createdAt","updatedAt","openUpdateModal","setOpenUpdateModal","handleCloseUpdateModal","_responseAddPatient$d","createPatientChange","_responseAddPatient$e","_responseAddPatient$e2","modalADDPatient","onSubmit","formData","FormData","append","JSON","stringify","email","adminEmail","name","adminName","role","adminRole","adminId","type","required","minLength","maxLength","RadioGroup","onChange","e","sx","display","flexDirection","FormControlLabel","control","Radio","accept","files","URL","createObjectURL","patientZipcode","_responseUpdatePatien","updatePatientChange","_responseUpdatePatien2","_responseUpdatePatien3","modalUpdatePatient","preventDefault","disabled","search","setSearch","mappedBillData","filter","_data$patientId","userSearch","toLowerCase","searchInData","startsWith","list","MdViewKanban","handleOpenUpdateModal","RiEdit2Fill","handleClickOpenDialogBox","RiDeleteBin6Fill","Suspense","fallback","_Fragment","handleOpen","FaSearch","Table","Modal","Box","Typography","variant","mt","handleCloseViewModal","LuHardDriveDownload","Snackbars","severity"],"sourceRoot":""}