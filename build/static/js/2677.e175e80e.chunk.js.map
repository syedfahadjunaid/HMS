{"version":3,"file":"static/js/2677.e175e80e.chunk.js","mappings":"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","sources":["Logout.js","components/Nurse/UpperNav/UpperNav.js","components/SnackBar.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  getAdminLoggedIn,\r\n  getAdminLoggedInData,\r\n  getAdminRole,\r\n} from \"./Store/Slices/AdminSlice\";\r\n\r\nimport * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nexport default function Logout({ Style }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const handleLogout = () => {\r\n    // localStorage.removeItem(\"Admin\");\r\n    // localStorage.removeItem(\"AdminRole\");\r\n    // localStorage.removeItem(\"AdminData\");\r\n    dispatch(getAdminRole(null));\r\n    dispatch(getAdminLoggedIn(null));\r\n    dispatch(getAdminLoggedInData(null));\r\n    // Cookies.remove(\"AdminToken\");\r\n    localStorage.removeItem(\"AdminToken\");\r\n\r\n    handleClose();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        className={Style}\r\n        // onClick={handleLogout}\r\n        onClick={handleClickOpen}>\r\n        Logout\r\n      </button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'>\r\n        <DialogTitle id='alert-dialog-title'>{\"LOGOUT\"}</DialogTitle>\r\n        <DialogContent className='bg-white w-[400px]'>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            Are you sure want to logout?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleLogout} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./UpperNav.css\";\r\nimport { Suspense } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { FaRegBell } from \"react-icons/fa\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\nimport { IoIosArrowUp } from \"react-icons/io\";\r\n\r\nimport Logout from \"../../../Logout\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nimport Snackbars from \"../../SnackBar\";\r\n\r\nimport {\r\n  useAdminChangePasswordByIdMutation,\r\n  useAdminUpdateByIdMutation,\r\n} from \"../../../Store/Services/AdminService\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { updateAdminChange } from \"../../../Store/Slices/AdminSlice\";\r\n\r\nexport default function UpperNav() {\r\n  const dispatch = useDispatch();\r\n  const { Admins, adminLoggedIn, adminLoggedInData, adminRole } = useSelector(\r\n    (state) => state.AdminState\r\n  );\r\n\r\n  const [adminChangePasswordById, responseAdminChangePasswordById] =\r\n    useAdminChangePasswordByIdMutation();\r\n\r\n  const [adminUpdateById, responseAdminUpdateById] =\r\n    useAdminUpdateByIdMutation();\r\n\r\n  console.log(responseAdminChangePasswordById);\r\n\r\n  const [adminName, setAdminName] = useState(\"\");\r\n  const [adminEmail, setAdminEmail] = useState(\"\");\r\n  const [adminOldPassword, setAdminOldPassword] = useState(\"\");\r\n  const [adminPassword, setAdminPassword] = useState(\"\");\r\n\r\n  const [showProfileDropdown, setShowProfileDropdown] = useState(false);\r\n\r\n  const [openProfileModal, setOpenProfileModal] = React.useState(false);\r\n  const handleOpenProfileModal = () => {\r\n    setAdminName(adminLoggedInData?.adminName);\r\n    setAdminEmail(adminLoggedInData?.adminEmail);\r\n    setOpenProfileModal(true);\r\n  };\r\n  const handleCloseProfileModal = () => setOpenProfileModal(false);\r\n\r\n  const [openChangePasswordModal, setOpenChangePasswordModal] =\r\n    React.useState(false);\r\n  const handleOpenChangePasswordModal = () => setOpenChangePasswordModal(true);\r\n  const handleCloseChangePasswordModal = () =>\r\n    setOpenChangePasswordModal(false);\r\n\r\n  // console.log(adminRole);\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"60%\",\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"8px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  // Snackbar--------------------\r\n  // ----Succcess\r\n  const [openSnackbarSuccess, setOpenSnackBarSuccess] = React.useState(false);\r\n  const [snackBarMessageSuccess, setSnackBarSuccessMessage] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarSuccess = () => {\r\n    setOpenSnackBarSuccess(true);\r\n  };\r\n  // ----Warning\r\n  const [openSnackbarWarning, setOpenSnackBarWarning] = React.useState(false);\r\n  const [snackBarMessageWarning, setSnackBarSuccessWarning] =\r\n    React.useState(\"\");\r\n\r\n  const handleClickSnackbarWarning = () => {\r\n    setOpenSnackBarWarning(true);\r\n  };\r\n  // ----------------------------\r\n\r\n  useEffect(() => {\r\n    if (responseAdminUpdateById.isSuccess) {\r\n      setSnackBarSuccessMessage(responseAdminUpdateById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleCloseProfileModal();\r\n      dispatch(updateAdminChange(Math.random()));\r\n    } else if (responseAdminUpdateById.isError) {\r\n      setSnackBarSuccessWarning(responseAdminUpdateById?.error?.data);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [responseAdminUpdateById.isSuccess, responseAdminUpdateById.isError]);\r\n\r\n  const handleProfileChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    adminUpdateById({\r\n      id: adminLoggedInData?.adminId,\r\n      data: {\r\n        adminName: adminName,\r\n        adminPassword: \"\",\r\n        adminRole: adminLoggedInData?.adminRole,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (responseAdminChangePasswordById.isSuccess) {\r\n      setSnackBarSuccessMessage(responseAdminChangePasswordById?.data?.message);\r\n      handleClickSnackbarSuccess();\r\n      handleCloseChangePasswordModal();\r\n      dispatch(updateAdminChange(Math.random()));\r\n    } else if (responseAdminChangePasswordById.isError) {\r\n      setSnackBarSuccessWarning(responseAdminChangePasswordById?.error?.data);\r\n      handleClickSnackbarWarning();\r\n    }\r\n  }, [\r\n    responseAdminChangePasswordById.isSuccess,\r\n    responseAdminChangePasswordById.isError,\r\n  ]);\r\n\r\n  const handleChangePassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    adminChangePasswordById({\r\n      id: adminLoggedInData?.adminId,\r\n      data: {\r\n        adminOldPassword: adminOldPassword,\r\n        adminPassword: adminPassword,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<>...</>}>\r\n        <div className='flex flex-row w-full items-center border-b-[1px] border-b-solid relative'>\r\n          <div className='flex p-[1.5rem] w-[70%]'>\r\n            <div className='px-[10px] w-[90%] bg-[#E7EFFF] flex flex-row items-center gap-[10px] rounded-[8px]'>\r\n              <FaSearch className='text-[#636D73]' />\r\n              <input\r\n                className='w-full outline-none py-[10px] bg-transparent'\r\n                placeholder='Search'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='w-[30%] flex gap-[1rem] items-center pr-[1rem]'>\r\n            <div className='flex relative cursor-pointer'>\r\n              <div className='p-[6px] rounded-md shadow-md w-fit h-fit'>\r\n                <FaRegBell className='text-[25px] text-[#2662F0]' />\r\n              </div>\r\n\r\n              <GoDotFill className='text-[#FDCA40] absolute right-0' />\r\n            </div>\r\n            {/* <img\r\n              src={userImage}\r\n              alt='userImage'\r\n              className='w-[50px] h-[50px]'\r\n            /> */}\r\n            <FaRegUser className='text-[35px] bg-[#3497F9] text-white p-[4px] rounded-full' />\r\n            <div\r\n              className='flex flex-col items-start text-[#414D55] cursor-pointer select-none'\r\n              onClick={() => setShowProfileDropdown(!showProfileDropdown)}>\r\n              <p className='font-[500] text-[14px]'>\r\n                {adminLoggedInData?.adminName}\r\n              </p>\r\n              <p>{adminLoggedInData?.adminRole}</p>\r\n            </div>\r\n            {showProfileDropdown ? (\r\n              <IoIosArrowUp\r\n                className='cursor-pointer'\r\n                onClick={() => setShowProfileDropdown(!showProfileDropdown)}\r\n              />\r\n            ) : (\r\n              <IoIosArrowDown\r\n                className='cursor-pointer'\r\n                onClick={() => setShowProfileDropdown(!showProfileDropdown)}\r\n              />\r\n            )}\r\n            {showProfileDropdown && (\r\n              <div className='absolute px-[3rem] top-[5rem] flex flex-col items-center z-10 fade-in'>\r\n                <div className='border-t-[20px] border-t-transparent w-fit border-b-[20px] border-b-[#3497F9] border-l-[20px] border-l-transparent border-r-[20px] border-r-transparent'></div>\r\n                <div className='bg-[#3497F9] px-[3rem] shadow-md py-[1rem] rounded-md flex flex-col items-start gap-[10px] w-fit'>\r\n                  <button\r\n                    onClick={handleOpenProfileModal}\r\n                    className='bg-white text-[14px] text-black p-[4px] rounded-md w-full'>\r\n                    My Profile\r\n                  </button>\r\n                  <button\r\n                    onClick={handleOpenChangePasswordModal}\r\n                    className='bg-white text-[14px] text-black p-[4px] rounded-md w-full'>\r\n                    Change Password\r\n                  </button>\r\n                  <Logout Style='bg-[#202020] text-[14px] text-white p-[4px] rounded-md w-full' />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          open={openProfileModal}\r\n          onClose={handleCloseProfileModal}\r\n          aria-labelledby='modal-modal-title'\r\n          aria-describedby='modal-modal-description'>\r\n          <Box sx={style}>\r\n            <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n              <h1 className='headingBottomUnderline w-fit'>Edit Profile</h1>\r\n            </Typography>\r\n            <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n              <form\r\n                className='flex flex-col gap-[1rem]'\r\n                onSubmit={handleProfileChange}>\r\n                <div className='grid grid-cols-2 gap-[1rem]'>\r\n                  <div className='flex flex-col gap-[10px]'>\r\n                    <label>Full Name</label>\r\n                    <input\r\n                      className='bg-[#F4F4F4] outline-none p-[1rem] rounded-[8px]'\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter full name'\r\n                      value={adminName}\r\n                      onChange={(e) => setAdminName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className='flex flex-col gap-[10px]'>\r\n                    <label>Email</label>\r\n                    <input\r\n                      className='bg-[#F4F4F4] outline-none p-[1rem] rounded-[8px]'\r\n                      disabled\r\n                      type='email'\r\n                      placeholder='Enter email'\r\n                      value={adminEmail}\r\n                      onChange={(e) => setAdminEmail(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button type='submit' className='buttonFilled w-fit'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n        <Modal\r\n          open={openChangePasswordModal}\r\n          onClose={handleCloseChangePasswordModal}\r\n          aria-labelledby='modal-modal-title'\r\n          aria-describedby='modal-modal-description'>\r\n          <Box sx={style}>\r\n            <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n              <h1 className='headingBottomUnderline w-fit'>Change Password</h1>\r\n            </Typography>\r\n            <Typography id='modal-modal-description' sx={{ mt: 2 }}>\r\n              <form\r\n                className='flex flex-col gap-[1rem]'\r\n                onSubmit={handleChangePassword}>\r\n                <div className='grid grid-cols-2 gap-[1rem]'>\r\n                  <div className='flex flex-col gap-[10px]'>\r\n                    <label>Old Password</label>\r\n                    <input\r\n                      className='bg-[#F4F4F4] outline-none p-[1rem] rounded-[8px]'\r\n                      type='password'\r\n                      required\r\n                      placeholder='Enter old password'\r\n                      autoComplete='new-password'\r\n                      value={adminOldPassword}\r\n                      onChange={(e) => setAdminOldPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className='flex flex-col gap-[10px]'>\r\n                    <label>New Password</label>\r\n                    <input\r\n                      className='bg-[#F4F4F4] outline-none p-[1rem] rounded-[8px]'\r\n                      type='password'\r\n                      required\r\n                      placeholder='Enter new password'\r\n                      autoComplete='new-password'\r\n                      value={adminPassword}\r\n                      onChange={(e) => setAdminPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <button type='submit' className='buttonFilled w-fit'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n        <Snackbars\r\n          open={openSnackbarSuccess}\r\n          setOpen={setOpenSnackBarSuccess}\r\n          severity='success'\r\n          message={snackBarMessageSuccess}\r\n        />\r\n        {/* Warning Snackbar */}\r\n        <Snackbars\r\n          open={openSnackbarWarning}\r\n          setOpen={setOpenSnackBarWarning}\r\n          severity='warning'\r\n          message={snackBarMessageWarning}\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n// import Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nexport default function Snackbars({ open, setOpen, severity, message }) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   const handleClick = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleClick}>Open Snackbar</Button> */}\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity={severity}\r\n          variant='filled'\r\n          sx={{ width: \"100%\" }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Logout","_ref","Style","open","setOpen","React","handleClose","dispatch","useDispatch","navigate","useNavigate","_jsxs","children","_jsx","className","onClick","handleClickOpen","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","handleLogout","getAdminRole","getAdminLoggedIn","getAdminLoggedInData","localStorage","removeItem","autoFocus","UpperNav","Admins","adminLoggedIn","adminLoggedInData","adminRole","useSelector","state","AdminState","adminChangePasswordById","responseAdminChangePasswordById","useAdminChangePasswordByIdMutation","adminUpdateById","responseAdminUpdateById","useAdminUpdateByIdMutation","console","log","adminName","setAdminName","useState","adminEmail","setAdminEmail","adminOldPassword","setAdminOldPassword","adminPassword","setAdminPassword","showProfileDropdown","setShowProfileDropdown","openProfileModal","setOpenProfileModal","handleCloseProfileModal","openChangePasswordModal","setOpenChangePasswordModal","handleCloseChangePasswordModal","style","position","top","left","transform","width","bgcolor","borderRadius","border","outline","boxShadow","p","openSnackbarSuccess","setOpenSnackBarSuccess","snackBarMessageSuccess","setSnackBarSuccessMessage","handleClickSnackbarSuccess","openSnackbarWarning","setOpenSnackBarWarning","snackBarMessageWarning","setSnackBarSuccessWarning","handleClickSnackbarWarning","useEffect","_responseAdminUpdateB","isSuccess","data","message","updateAdminChange","Math","random","isError","_responseAdminUpdateB2","error","_responseAdminChangeP","_responseAdminChangeP2","_Fragment","Suspense","fallback","FaSearch","placeholder","FaRegBell","GoDotFill","FaRegUser","IoIosArrowUp","IoIosArrowDown","handleOpenProfileModal","handleOpenChangePasswordModal","Modal","Box","sx","Typography","variant","component","mt","onSubmit","e","preventDefault","adminId","required","type","value","onChange","target","disabled","autoComplete","Snackbars","severity","event","reason","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}